module webservices/services/syncDirtyObjects
service webservice_generated_syncDirtyObjects ( )
{
  var json := JSONObject() ;
  var errors := JSONArray() ;
  var request := JSONArray(readRequestBody()) ;
  var result := JSONArray() ;
  if ( request != null )
  {
    for ( count : Int from 0 to request.length() )
      {
        var jsontemp := request.getJSONObject(count) ;
        var kind := jsontemp.getString("name") ;
        var entities := jsontemp.getJSONArray("value") ;
        if ( jsontemp != null && kind != null && entities != null )
        {
          if ( kind == "A" )
          {
            for ( count : Int from 0 to entities.length() )
              {
                var localErrors := JSONArray() ;
                var entity := ( loadEntity("A", entities.getJSONObject(count).getString("id").parseUUID()) as A ) ;
                if ( entity == null )
                {
                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                }
                else
                {
                  if ( entity.mayModifySynchronize() )
                  {
                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                    {
                      mapperEditedA(entity, entities.getJSONObject(count), localErrors);
                      var exceptions := entity.validateSave() ;
                      addValidateExceptionsToErrors(exceptions, localErrors);
                      if ( containsErrorInJSONArray(localErrors) )
                      {
                        rollbackAndStartNewTransaction();
                      }
                      else
                      {
                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                      }
                    }
                    else
                    {
                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                    }
                  }
                  else
                  {
                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                  }
                }
                if ( localErrors.length() > 0 )
                {
                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "A", entities.getJSONObject(count).getString("id")) ;
                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                  {
                    var entity := ( loadEntity("A", entities.getJSONObject(count).getString("id").parseUUID()) as A ) ;
                    jsonErrorObject.put("restore", entity.toJSON());
                  }
                  errors.put(jsonErrorObject);
                }
              }
          }
          else
          {
            if ( kind == "B" )
            {
              for ( count : Int from 0 to entities.length() )
                {
                  var localErrors := JSONArray() ;
                  var entity := ( loadEntity("B", entities.getJSONObject(count).getString("id").parseUUID()) as B ) ;
                  if ( entity == null )
                  {
                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                  }
                  else
                  {
                    if ( entity.mayModifySynchronize() )
                    {
                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                      {
                        mapperEditedB(entity, entities.getJSONObject(count), localErrors);
                        var exceptions := entity.validateSave() ;
                        addValidateExceptionsToErrors(exceptions, localErrors);
                        if ( containsErrorInJSONArray(localErrors) )
                        {
                          rollbackAndStartNewTransaction();
                        }
                        else
                        {
                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                        }
                      }
                      else
                      {
                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                      }
                    }
                    else
                    {
                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                    }
                  }
                  if ( localErrors.length() > 0 )
                  {
                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "B", entities.getJSONObject(count).getString("id")) ;
                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                    {
                      var entity := ( loadEntity("B", entities.getJSONObject(count).getString("id").parseUUID()) as B ) ;
                      jsonErrorObject.put("restore", entity.toJSON());
                    }
                    errors.put(jsonErrorObject);
                  }
                }
            }
            else
            {
              if ( kind == "C" )
              {
                for ( count : Int from 0 to entities.length() )
                  {
                    var localErrors := JSONArray() ;
                    var entity := ( loadEntity("C", entities.getJSONObject(count).getString("id").parseUUID()) as C ) ;
                    if ( entity == null )
                    {
                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                    }
                    else
                    {
                      if ( entity.mayModifySynchronize() )
                      {
                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                        {
                          mapperEditedC(entity, entities.getJSONObject(count), localErrors);
                          var exceptions := entity.validateSave() ;
                          addValidateExceptionsToErrors(exceptions, localErrors);
                          if ( containsErrorInJSONArray(localErrors) )
                          {
                            rollbackAndStartNewTransaction();
                          }
                          else
                          {
                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                          }
                        }
                        else
                        {
                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                        }
                      }
                      else
                      {
                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                      }
                    }
                    if ( localErrors.length() > 0 )
                    {
                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "C", entities.getJSONObject(count).getString("id")) ;
                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                      {
                        var entity := ( loadEntity("C", entities.getJSONObject(count).getString("id").parseUUID()) as C ) ;
                        jsonErrorObject.put("restore", entity.toJSON());
                      }
                      errors.put(jsonErrorObject);
                    }
                  }
              }
              else
              {
                if ( kind == "D" )
                {
                  for ( count : Int from 0 to entities.length() )
                    {
                      var localErrors := JSONArray() ;
                      var entity := ( loadEntity("D", entities.getJSONObject(count).getString("id").parseUUID()) as D ) ;
                      if ( entity == null )
                      {
                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                      }
                      else
                      {
                        if ( entity.mayModifySynchronize() )
                        {
                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                          {
                            mapperEditedD(entity, entities.getJSONObject(count), localErrors);
                            var exceptions := entity.validateSave() ;
                            addValidateExceptionsToErrors(exceptions, localErrors);
                            if ( containsErrorInJSONArray(localErrors) )
                            {
                              rollbackAndStartNewTransaction();
                            }
                            else
                            {
                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                            }
                          }
                          else
                          {
                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                          }
                        }
                        else
                        {
                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                        }
                      }
                      if ( localErrors.length() > 0 )
                      {
                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "D", entities.getJSONObject(count).getString("id")) ;
                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                        {
                          var entity := ( loadEntity("D", entities.getJSONObject(count).getString("id").parseUUID()) as D ) ;
                          jsonErrorObject.put("restore", entity.toJSON());
                        }
                        errors.put(jsonErrorObject);
                      }
                    }
                }
                else
                {
                  if ( kind == "E" )
                  {
                    for ( count : Int from 0 to entities.length() )
                      {
                        var localErrors := JSONArray() ;
                        var entity := ( loadEntity("E", entities.getJSONObject(count).getString("id").parseUUID()) as E ) ;
                        if ( entity == null )
                        {
                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                        }
                        else
                        {
                          if ( entity.mayModifySynchronize() )
                          {
                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                            {
                              mapperEditedE(entity, entities.getJSONObject(count), localErrors);
                              var exceptions := entity.validateSave() ;
                              addValidateExceptionsToErrors(exceptions, localErrors);
                              if ( containsErrorInJSONArray(localErrors) )
                              {
                                rollbackAndStartNewTransaction();
                              }
                              else
                              {
                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                              }
                            }
                            else
                            {
                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                            }
                          }
                          else
                          {
                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                          }
                        }
                        if ( localErrors.length() > 0 )
                        {
                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "E", entities.getJSONObject(count).getString("id")) ;
                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                          {
                            var entity := ( loadEntity("E", entities.getJSONObject(count).getString("id").parseUUID()) as E ) ;
                            jsonErrorObject.put("restore", entity.toJSON());
                          }
                          errors.put(jsonErrorObject);
                        }
                      }
                  }
                  else
                  {
                    if ( kind == "F" )
                    {
                      for ( count : Int from 0 to entities.length() )
                        {
                          var localErrors := JSONArray() ;
                          var entity := ( loadEntity("F", entities.getJSONObject(count).getString("id").parseUUID()) as F ) ;
                          if ( entity == null )
                          {
                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                          }
                          else
                          {
                            if ( entity.mayModifySynchronize() )
                            {
                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                              {
                                mapperEditedF(entity, entities.getJSONObject(count), localErrors);
                                var exceptions := entity.validateSave() ;
                                addValidateExceptionsToErrors(exceptions, localErrors);
                                if ( containsErrorInJSONArray(localErrors) )
                                {
                                  rollbackAndStartNewTransaction();
                                }
                                else
                                {
                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                }
                              }
                              else
                              {
                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                              }
                            }
                            else
                            {
                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                            }
                          }
                          if ( localErrors.length() > 0 )
                          {
                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "F", entities.getJSONObject(count).getString("id")) ;
                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                            {
                              var entity := ( loadEntity("F", entities.getJSONObject(count).getString("id").parseUUID()) as F ) ;
                              jsonErrorObject.put("restore", entity.toJSON());
                            }
                            errors.put(jsonErrorObject);
                          }
                        }
                    }
                    else
                    {
                      if ( kind == "G" )
                      {
                        for ( count : Int from 0 to entities.length() )
                          {
                            var localErrors := JSONArray() ;
                            var entity := ( loadEntity("G", entities.getJSONObject(count).getString("id").parseUUID()) as G ) ;
                            if ( entity == null )
                            {
                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                            }
                            else
                            {
                              if ( entity.mayModifySynchronize() )
                              {
                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                {
                                  mapperEditedG(entity, entities.getJSONObject(count), localErrors);
                                  var exceptions := entity.validateSave() ;
                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                  if ( containsErrorInJSONArray(localErrors) )
                                  {
                                    rollbackAndStartNewTransaction();
                                  }
                                  else
                                  {
                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                  }
                                }
                                else
                                {
                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                }
                              }
                              else
                              {
                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                              }
                            }
                            if ( localErrors.length() > 0 )
                            {
                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "G", entities.getJSONObject(count).getString("id")) ;
                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                              {
                                var entity := ( loadEntity("G", entities.getJSONObject(count).getString("id").parseUUID()) as G ) ;
                                jsonErrorObject.put("restore", entity.toJSON());
                              }
                              errors.put(jsonErrorObject);
                            }
                          }
                      }
                      else
                      {
                        if ( kind == "H" )
                        {
                          for ( count : Int from 0 to entities.length() )
                            {
                              var localErrors := JSONArray() ;
                              var entity := ( loadEntity("H", entities.getJSONObject(count).getString("id").parseUUID()) as H ) ;
                              if ( entity == null )
                              {
                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                              }
                              else
                              {
                                if ( entity.mayModifySynchronize() )
                                {
                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                  {
                                    mapperEditedH(entity, entities.getJSONObject(count), localErrors);
                                    var exceptions := entity.validateSave() ;
                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                    if ( containsErrorInJSONArray(localErrors) )
                                    {
                                      rollbackAndStartNewTransaction();
                                    }
                                    else
                                    {
                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                    }
                                  }
                                  else
                                  {
                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                  }
                                }
                                else
                                {
                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                }
                              }
                              if ( localErrors.length() > 0 )
                              {
                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "H", entities.getJSONObject(count).getString("id")) ;
                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                {
                                  var entity := ( loadEntity("H", entities.getJSONObject(count).getString("id").parseUUID()) as H ) ;
                                  jsonErrorObject.put("restore", entity.toJSON());
                                }
                                errors.put(jsonErrorObject);
                              }
                            }
                        }
                        else
                        {
                          if ( kind == "I" )
                          {
                            for ( count : Int from 0 to entities.length() )
                              {
                                var localErrors := JSONArray() ;
                                var entity := ( loadEntity("I", entities.getJSONObject(count).getString("id").parseUUID()) as I ) ;
                                if ( entity == null )
                                {
                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                }
                                else
                                {
                                  if ( entity.mayModifySynchronize() )
                                  {
                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                    {
                                      mapperEditedI(entity, entities.getJSONObject(count), localErrors);
                                      var exceptions := entity.validateSave() ;
                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                      if ( containsErrorInJSONArray(localErrors) )
                                      {
                                        rollbackAndStartNewTransaction();
                                      }
                                      else
                                      {
                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                      }
                                    }
                                    else
                                    {
                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                    }
                                  }
                                  else
                                  {
                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                  }
                                }
                                if ( localErrors.length() > 0 )
                                {
                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "I", entities.getJSONObject(count).getString("id")) ;
                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                  {
                                    var entity := ( loadEntity("I", entities.getJSONObject(count).getString("id").parseUUID()) as I ) ;
                                    jsonErrorObject.put("restore", entity.toJSON());
                                  }
                                  errors.put(jsonErrorObject);
                                }
                              }
                          }
                          else
                          {
                            if ( kind == "J" )
                            {
                              for ( count : Int from 0 to entities.length() )
                                {
                                  var localErrors := JSONArray() ;
                                  var entity := ( loadEntity("J", entities.getJSONObject(count).getString("id").parseUUID()) as J ) ;
                                  if ( entity == null )
                                  {
                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                  }
                                  else
                                  {
                                    if ( entity.mayModifySynchronize() )
                                    {
                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                      {
                                        mapperEditedJ(entity, entities.getJSONObject(count), localErrors);
                                        var exceptions := entity.validateSave() ;
                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                        if ( containsErrorInJSONArray(localErrors) )
                                        {
                                          rollbackAndStartNewTransaction();
                                        }
                                        else
                                        {
                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                        }
                                      }
                                      else
                                      {
                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                      }
                                    }
                                    else
                                    {
                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                    }
                                  }
                                  if ( localErrors.length() > 0 )
                                  {
                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "J", entities.getJSONObject(count).getString("id")) ;
                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                    {
                                      var entity := ( loadEntity("J", entities.getJSONObject(count).getString("id").parseUUID()) as J ) ;
                                      jsonErrorObject.put("restore", entity.toJSON());
                                    }
                                    errors.put(jsonErrorObject);
                                  }
                                }
                            }
                            else
                            {
                              if ( kind == "K" )
                              {
                                for ( count : Int from 0 to entities.length() )
                                  {
                                    var localErrors := JSONArray() ;
                                    var entity := ( loadEntity("K", entities.getJSONObject(count).getString("id").parseUUID()) as K ) ;
                                    if ( entity == null )
                                    {
                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                    }
                                    else
                                    {
                                      if ( entity.mayModifySynchronize() )
                                      {
                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                        {
                                          mapperEditedK(entity, entities.getJSONObject(count), localErrors);
                                          var exceptions := entity.validateSave() ;
                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                          if ( containsErrorInJSONArray(localErrors) )
                                          {
                                            rollbackAndStartNewTransaction();
                                          }
                                          else
                                          {
                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                          }
                                        }
                                        else
                                        {
                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                        }
                                      }
                                      else
                                      {
                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                      }
                                    }
                                    if ( localErrors.length() > 0 )
                                    {
                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "K", entities.getJSONObject(count).getString("id")) ;
                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                      {
                                        var entity := ( loadEntity("K", entities.getJSONObject(count).getString("id").parseUUID()) as K ) ;
                                        jsonErrorObject.put("restore", entity.toJSON());
                                      }
                                      errors.put(jsonErrorObject);
                                    }
                                  }
                              }
                              else
                              {
                                if ( kind == "L" )
                                {
                                  for ( count : Int from 0 to entities.length() )
                                    {
                                      var localErrors := JSONArray() ;
                                      var entity := ( loadEntity("L", entities.getJSONObject(count).getString("id").parseUUID()) as L ) ;
                                      if ( entity == null )
                                      {
                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                      }
                                      else
                                      {
                                        if ( entity.mayModifySynchronize() )
                                        {
                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                          {
                                            mapperEditedL(entity, entities.getJSONObject(count), localErrors);
                                            var exceptions := entity.validateSave() ;
                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                            if ( containsErrorInJSONArray(localErrors) )
                                            {
                                              rollbackAndStartNewTransaction();
                                            }
                                            else
                                            {
                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                            }
                                          }
                                          else
                                          {
                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                          }
                                        }
                                        else
                                        {
                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                        }
                                      }
                                      if ( localErrors.length() > 0 )
                                      {
                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "L", entities.getJSONObject(count).getString("id")) ;
                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                        {
                                          var entity := ( loadEntity("L", entities.getJSONObject(count).getString("id").parseUUID()) as L ) ;
                                          jsonErrorObject.put("restore", entity.toJSON());
                                        }
                                        errors.put(jsonErrorObject);
                                      }
                                    }
                                }
                                else
                                {
                                  if ( kind == "M" )
                                  {
                                    for ( count : Int from 0 to entities.length() )
                                      {
                                        var localErrors := JSONArray() ;
                                        var entity := ( loadEntity("M", entities.getJSONObject(count).getString("id").parseUUID()) as M ) ;
                                        if ( entity == null )
                                        {
                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                        }
                                        else
                                        {
                                          if ( entity.mayModifySynchronize() )
                                          {
                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                            {
                                              mapperEditedM(entity, entities.getJSONObject(count), localErrors);
                                              var exceptions := entity.validateSave() ;
                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                              if ( containsErrorInJSONArray(localErrors) )
                                              {
                                                rollbackAndStartNewTransaction();
                                              }
                                              else
                                              {
                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                              }
                                            }
                                            else
                                            {
                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                            }
                                          }
                                          else
                                          {
                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                          }
                                        }
                                        if ( localErrors.length() > 0 )
                                        {
                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "M", entities.getJSONObject(count).getString("id")) ;
                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                          {
                                            var entity := ( loadEntity("M", entities.getJSONObject(count).getString("id").parseUUID()) as M ) ;
                                            jsonErrorObject.put("restore", entity.toJSON());
                                          }
                                          errors.put(jsonErrorObject);
                                        }
                                      }
                                  }
                                  else
                                  {
                                    if ( kind == "N" )
                                    {
                                      for ( count : Int from 0 to entities.length() )
                                        {
                                          var localErrors := JSONArray() ;
                                          var entity := ( loadEntity("N", entities.getJSONObject(count).getString("id").parseUUID()) as N ) ;
                                          if ( entity == null )
                                          {
                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                          }
                                          else
                                          {
                                            if ( entity.mayModifySynchronize() )
                                            {
                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                              {
                                                mapperEditedN(entity, entities.getJSONObject(count), localErrors);
                                                var exceptions := entity.validateSave() ;
                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                if ( containsErrorInJSONArray(localErrors) )
                                                {
                                                  rollbackAndStartNewTransaction();
                                                }
                                                else
                                                {
                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                }
                                              }
                                              else
                                              {
                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                              }
                                            }
                                            else
                                            {
                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                            }
                                          }
                                          if ( localErrors.length() > 0 )
                                          {
                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "N", entities.getJSONObject(count).getString("id")) ;
                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                            {
                                              var entity := ( loadEntity("N", entities.getJSONObject(count).getString("id").parseUUID()) as N ) ;
                                              jsonErrorObject.put("restore", entity.toJSON());
                                            }
                                            errors.put(jsonErrorObject);
                                          }
                                        }
                                    }
                                    else
                                    {
                                      if ( kind == "O" )
                                      {
                                        for ( count : Int from 0 to entities.length() )
                                          {
                                            var localErrors := JSONArray() ;
                                            var entity := ( loadEntity("O", entities.getJSONObject(count).getString("id").parseUUID()) as O ) ;
                                            if ( entity == null )
                                            {
                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                            }
                                            else
                                            {
                                              if ( entity.mayModifySynchronize() )
                                              {
                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                {
                                                  mapperEditedO(entity, entities.getJSONObject(count), localErrors);
                                                  var exceptions := entity.validateSave() ;
                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                  if ( containsErrorInJSONArray(localErrors) )
                                                  {
                                                    rollbackAndStartNewTransaction();
                                                  }
                                                  else
                                                  {
                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                  }
                                                }
                                                else
                                                {
                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                }
                                              }
                                              else
                                              {
                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                              }
                                            }
                                            if ( localErrors.length() > 0 )
                                            {
                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "O", entities.getJSONObject(count).getString("id")) ;
                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                              {
                                                var entity := ( loadEntity("O", entities.getJSONObject(count).getString("id").parseUUID()) as O ) ;
                                                jsonErrorObject.put("restore", entity.toJSON());
                                              }
                                              errors.put(jsonErrorObject);
                                            }
                                          }
                                      }
                                      else
                                      {
                                        if ( kind == "P" )
                                        {
                                          for ( count : Int from 0 to entities.length() )
                                            {
                                              var localErrors := JSONArray() ;
                                              var entity := ( loadEntity("P", entities.getJSONObject(count).getString("id").parseUUID()) as P ) ;
                                              if ( entity == null )
                                              {
                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                              }
                                              else
                                              {
                                                if ( entity.mayModifySynchronize() )
                                                {
                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                  {
                                                    mapperEditedP(entity, entities.getJSONObject(count), localErrors);
                                                    var exceptions := entity.validateSave() ;
                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                    if ( containsErrorInJSONArray(localErrors) )
                                                    {
                                                      rollbackAndStartNewTransaction();
                                                    }
                                                    else
                                                    {
                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                    }
                                                  }
                                                  else
                                                  {
                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                  }
                                                }
                                                else
                                                {
                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                }
                                              }
                                              if ( localErrors.length() > 0 )
                                              {
                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "P", entities.getJSONObject(count).getString("id")) ;
                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                {
                                                  var entity := ( loadEntity("P", entities.getJSONObject(count).getString("id").parseUUID()) as P ) ;
                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                }
                                                errors.put(jsonErrorObject);
                                              }
                                            }
                                        }
                                        else
                                        {
                                          if ( kind == "Q" )
                                          {
                                            for ( count : Int from 0 to entities.length() )
                                              {
                                                var localErrors := JSONArray() ;
                                                var entity := ( loadEntity("Q", entities.getJSONObject(count).getString("id").parseUUID()) as Q ) ;
                                                if ( entity == null )
                                                {
                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                }
                                                else
                                                {
                                                  if ( entity.mayModifySynchronize() )
                                                  {
                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                    {
                                                      mapperEditedQ(entity, entities.getJSONObject(count), localErrors);
                                                      var exceptions := entity.validateSave() ;
                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                      if ( containsErrorInJSONArray(localErrors) )
                                                      {
                                                        rollbackAndStartNewTransaction();
                                                      }
                                                      else
                                                      {
                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                      }
                                                    }
                                                    else
                                                    {
                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                    }
                                                  }
                                                  else
                                                  {
                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                  }
                                                }
                                                if ( localErrors.length() > 0 )
                                                {
                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Q", entities.getJSONObject(count).getString("id")) ;
                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                  {
                                                    var entity := ( loadEntity("Q", entities.getJSONObject(count).getString("id").parseUUID()) as Q ) ;
                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                  }
                                                  errors.put(jsonErrorObject);
                                                }
                                              }
                                          }
                                          else
                                          {
                                            if ( kind == "R" )
                                            {
                                              for ( count : Int from 0 to entities.length() )
                                                {
                                                  var localErrors := JSONArray() ;
                                                  var entity := ( loadEntity("R", entities.getJSONObject(count).getString("id").parseUUID()) as R ) ;
                                                  if ( entity == null )
                                                  {
                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                  }
                                                  else
                                                  {
                                                    if ( entity.mayModifySynchronize() )
                                                    {
                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                      {
                                                        mapperEditedR(entity, entities.getJSONObject(count), localErrors);
                                                        var exceptions := entity.validateSave() ;
                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                        if ( containsErrorInJSONArray(localErrors) )
                                                        {
                                                          rollbackAndStartNewTransaction();
                                                        }
                                                        else
                                                        {
                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                        }
                                                      }
                                                      else
                                                      {
                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                      }
                                                    }
                                                    else
                                                    {
                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                    }
                                                  }
                                                  if ( localErrors.length() > 0 )
                                                  {
                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "R", entities.getJSONObject(count).getString("id")) ;
                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                    {
                                                      var entity := ( loadEntity("R", entities.getJSONObject(count).getString("id").parseUUID()) as R ) ;
                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                    }
                                                    errors.put(jsonErrorObject);
                                                  }
                                                }
                                            }
                                            else
                                            {
                                              if ( kind == "S" )
                                              {
                                                for ( count : Int from 0 to entities.length() )
                                                  {
                                                    var localErrors := JSONArray() ;
                                                    var entity := ( loadEntity("S", entities.getJSONObject(count).getString("id").parseUUID()) as S ) ;
                                                    if ( entity == null )
                                                    {
                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                    }
                                                    else
                                                    {
                                                      if ( entity.mayModifySynchronize() )
                                                      {
                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                        {
                                                          mapperEditedS(entity, entities.getJSONObject(count), localErrors);
                                                          var exceptions := entity.validateSave() ;
                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                          if ( containsErrorInJSONArray(localErrors) )
                                                          {
                                                            rollbackAndStartNewTransaction();
                                                          }
                                                          else
                                                          {
                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                          }
                                                        }
                                                        else
                                                        {
                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                        }
                                                      }
                                                      else
                                                      {
                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                      }
                                                    }
                                                    if ( localErrors.length() > 0 )
                                                    {
                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "S", entities.getJSONObject(count).getString("id")) ;
                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                      {
                                                        var entity := ( loadEntity("S", entities.getJSONObject(count).getString("id").parseUUID()) as S ) ;
                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                      }
                                                      errors.put(jsonErrorObject);
                                                    }
                                                  }
                                              }
                                              else
                                              {
                                                if ( kind == "T" )
                                                {
                                                  for ( count : Int from 0 to entities.length() )
                                                    {
                                                      var localErrors := JSONArray() ;
                                                      var entity := ( loadEntity("T", entities.getJSONObject(count).getString("id").parseUUID()) as T ) ;
                                                      if ( entity == null )
                                                      {
                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                      }
                                                      else
                                                      {
                                                        if ( entity.mayModifySynchronize() )
                                                        {
                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                          {
                                                            mapperEditedT(entity, entities.getJSONObject(count), localErrors);
                                                            var exceptions := entity.validateSave() ;
                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                            if ( containsErrorInJSONArray(localErrors) )
                                                            {
                                                              rollbackAndStartNewTransaction();
                                                            }
                                                            else
                                                            {
                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                            }
                                                          }
                                                          else
                                                          {
                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                          }
                                                        }
                                                        else
                                                        {
                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                        }
                                                      }
                                                      if ( localErrors.length() > 0 )
                                                      {
                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "T", entities.getJSONObject(count).getString("id")) ;
                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                        {
                                                          var entity := ( loadEntity("T", entities.getJSONObject(count).getString("id").parseUUID()) as T ) ;
                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                        }
                                                        errors.put(jsonErrorObject);
                                                      }
                                                    }
                                                }
                                                else
                                                {
                                                  if ( kind == "U" )
                                                  {
                                                    for ( count : Int from 0 to entities.length() )
                                                      {
                                                        var localErrors := JSONArray() ;
                                                        var entity := ( loadEntity("U", entities.getJSONObject(count).getString("id").parseUUID()) as U ) ;
                                                        if ( entity == null )
                                                        {
                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                        }
                                                        else
                                                        {
                                                          if ( entity.mayModifySynchronize() )
                                                          {
                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                            {
                                                              mapperEditedU(entity, entities.getJSONObject(count), localErrors);
                                                              var exceptions := entity.validateSave() ;
                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                              if ( containsErrorInJSONArray(localErrors) )
                                                              {
                                                                rollbackAndStartNewTransaction();
                                                              }
                                                              else
                                                              {
                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                              }
                                                            }
                                                            else
                                                            {
                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                            }
                                                          }
                                                          else
                                                          {
                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                          }
                                                        }
                                                        if ( localErrors.length() > 0 )
                                                        {
                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "U", entities.getJSONObject(count).getString("id")) ;
                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                          {
                                                            var entity := ( loadEntity("U", entities.getJSONObject(count).getString("id").parseUUID()) as U ) ;
                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                          }
                                                          errors.put(jsonErrorObject);
                                                        }
                                                      }
                                                  }
                                                  else
                                                  {
                                                    if ( kind == "V" )
                                                    {
                                                      for ( count : Int from 0 to entities.length() )
                                                        {
                                                          var localErrors := JSONArray() ;
                                                          var entity := ( loadEntity("V", entities.getJSONObject(count).getString("id").parseUUID()) as V ) ;
                                                          if ( entity == null )
                                                          {
                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                          }
                                                          else
                                                          {
                                                            if ( entity.mayModifySynchronize() )
                                                            {
                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                              {
                                                                mapperEditedV(entity, entities.getJSONObject(count), localErrors);
                                                                var exceptions := entity.validateSave() ;
                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                {
                                                                  rollbackAndStartNewTransaction();
                                                                }
                                                                else
                                                                {
                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                }
                                                              }
                                                              else
                                                              {
                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                              }
                                                            }
                                                            else
                                                            {
                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                            }
                                                          }
                                                          if ( localErrors.length() > 0 )
                                                          {
                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "V", entities.getJSONObject(count).getString("id")) ;
                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                            {
                                                              var entity := ( loadEntity("V", entities.getJSONObject(count).getString("id").parseUUID()) as V ) ;
                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                            }
                                                            errors.put(jsonErrorObject);
                                                          }
                                                        }
                                                    }
                                                    else
                                                    {
                                                      if ( kind == "W" )
                                                      {
                                                        for ( count : Int from 0 to entities.length() )
                                                          {
                                                            var localErrors := JSONArray() ;
                                                            var entity := ( loadEntity("W", entities.getJSONObject(count).getString("id").parseUUID()) as W ) ;
                                                            if ( entity == null )
                                                            {
                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                            }
                                                            else
                                                            {
                                                              if ( entity.mayModifySynchronize() )
                                                              {
                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                {
                                                                  mapperEditedW(entity, entities.getJSONObject(count), localErrors);
                                                                  var exceptions := entity.validateSave() ;
                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                  {
                                                                    rollbackAndStartNewTransaction();
                                                                  }
                                                                  else
                                                                  {
                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                }
                                                              }
                                                              else
                                                              {
                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                              }
                                                            }
                                                            if ( localErrors.length() > 0 )
                                                            {
                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "W", entities.getJSONObject(count).getString("id")) ;
                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                              {
                                                                var entity := ( loadEntity("W", entities.getJSONObject(count).getString("id").parseUUID()) as W ) ;
                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                              }
                                                              errors.put(jsonErrorObject);
                                                            }
                                                          }
                                                      }
                                                      else
                                                      {
                                                        if ( kind == "X" )
                                                        {
                                                          for ( count : Int from 0 to entities.length() )
                                                            {
                                                              var localErrors := JSONArray() ;
                                                              var entity := ( loadEntity("X", entities.getJSONObject(count).getString("id").parseUUID()) as X ) ;
                                                              if ( entity == null )
                                                              {
                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                              }
                                                              else
                                                              {
                                                                if ( entity.mayModifySynchronize() )
                                                                {
                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                  {
                                                                    mapperEditedX(entity, entities.getJSONObject(count), localErrors);
                                                                    var exceptions := entity.validateSave() ;
                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                    {
                                                                      rollbackAndStartNewTransaction();
                                                                    }
                                                                    else
                                                                    {
                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                  }
                                                                }
                                                                else
                                                                {
                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                }
                                                              }
                                                              if ( localErrors.length() > 0 )
                                                              {
                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "X", entities.getJSONObject(count).getString("id")) ;
                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                {
                                                                  var entity := ( loadEntity("X", entities.getJSONObject(count).getString("id").parseUUID()) as X ) ;
                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                }
                                                                errors.put(jsonErrorObject);
                                                              }
                                                            }
                                                        }
                                                        else
                                                        {
                                                          if ( kind == "Y" )
                                                          {
                                                            for ( count : Int from 0 to entities.length() )
                                                              {
                                                                var localErrors := JSONArray() ;
                                                                var entity := ( loadEntity("Y", entities.getJSONObject(count).getString("id").parseUUID()) as Y ) ;
                                                                if ( entity == null )
                                                                {
                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                }
                                                                else
                                                                {
                                                                  if ( entity.mayModifySynchronize() )
                                                                  {
                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                    {
                                                                      mapperEditedY(entity, entities.getJSONObject(count), localErrors);
                                                                      var exceptions := entity.validateSave() ;
                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                      {
                                                                        rollbackAndStartNewTransaction();
                                                                      }
                                                                      else
                                                                      {
                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                    }
                                                                  }
                                                                  else
                                                                  {
                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                  }
                                                                }
                                                                if ( localErrors.length() > 0 )
                                                                {
                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Y", entities.getJSONObject(count).getString("id")) ;
                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                  {
                                                                    var entity := ( loadEntity("Y", entities.getJSONObject(count).getString("id").parseUUID()) as Y ) ;
                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                  }
                                                                  errors.put(jsonErrorObject);
                                                                }
                                                              }
                                                          }
                                                          else
                                                          {
                                                            if ( kind == "Z" )
                                                            {
                                                              for ( count : Int from 0 to entities.length() )
                                                                {
                                                                  var localErrors := JSONArray() ;
                                                                  var entity := ( loadEntity("Z", entities.getJSONObject(count).getString("id").parseUUID()) as Z ) ;
                                                                  if ( entity == null )
                                                                  {
                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                  }
                                                                  else
                                                                  {
                                                                    if ( entity.mayModifySynchronize() )
                                                                    {
                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                      {
                                                                        mapperEditedZ(entity, entities.getJSONObject(count), localErrors);
                                                                        var exceptions := entity.validateSave() ;
                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                        {
                                                                          rollbackAndStartNewTransaction();
                                                                        }
                                                                        else
                                                                        {
                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                      }
                                                                    }
                                                                    else
                                                                    {
                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                    }
                                                                  }
                                                                  if ( localErrors.length() > 0 )
                                                                  {
                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Z", entities.getJSONObject(count).getString("id")) ;
                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                    {
                                                                      var entity := ( loadEntity("Z", entities.getJSONObject(count).getString("id").parseUUID()) as Z ) ;
                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                    }
                                                                    errors.put(jsonErrorObject);
                                                                  }
                                                                }
                                                            }
                                                            else
                                                            {
                                                              if ( kind == "A1" )
                                                              {
                                                                for ( count : Int from 0 to entities.length() )
                                                                  {
                                                                    var localErrors := JSONArray() ;
                                                                    var entity := ( loadEntity("A1", entities.getJSONObject(count).getString("id").parseUUID()) as A1 ) ;
                                                                    if ( entity == null )
                                                                    {
                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                    }
                                                                    else
                                                                    {
                                                                      if ( entity.mayModifySynchronize() )
                                                                      {
                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                        {
                                                                          mapperEditedA1(entity, entities.getJSONObject(count), localErrors);
                                                                          var exceptions := entity.validateSave() ;
                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                          {
                                                                            rollbackAndStartNewTransaction();
                                                                          }
                                                                          else
                                                                          {
                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                        }
                                                                      }
                                                                      else
                                                                      {
                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                      }
                                                                    }
                                                                    if ( localErrors.length() > 0 )
                                                                    {
                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "A1", entities.getJSONObject(count).getString("id")) ;
                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                      {
                                                                        var entity := ( loadEntity("A1", entities.getJSONObject(count).getString("id").parseUUID()) as A1 ) ;
                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                      }
                                                                      errors.put(jsonErrorObject);
                                                                    }
                                                                  }
                                                              }
                                                              else
                                                              {
                                                                if ( kind == "B1" )
                                                                {
                                                                  for ( count : Int from 0 to entities.length() )
                                                                    {
                                                                      var localErrors := JSONArray() ;
                                                                      var entity := ( loadEntity("B1", entities.getJSONObject(count).getString("id").parseUUID()) as B1 ) ;
                                                                      if ( entity == null )
                                                                      {
                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                      }
                                                                      else
                                                                      {
                                                                        if ( entity.mayModifySynchronize() )
                                                                        {
                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                          {
                                                                            mapperEditedB1(entity, entities.getJSONObject(count), localErrors);
                                                                            var exceptions := entity.validateSave() ;
                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                            {
                                                                              rollbackAndStartNewTransaction();
                                                                            }
                                                                            else
                                                                            {
                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                            }
                                                                          }
                                                                          else
                                                                          {
                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                          }
                                                                        }
                                                                        else
                                                                        {
                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                        }
                                                                      }
                                                                      if ( localErrors.length() > 0 )
                                                                      {
                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "B1", entities.getJSONObject(count).getString("id")) ;
                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                        {
                                                                          var entity := ( loadEntity("B1", entities.getJSONObject(count).getString("id").parseUUID()) as B1 ) ;
                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                        }
                                                                        errors.put(jsonErrorObject);
                                                                      }
                                                                    }
                                                                }
                                                                else
                                                                {
                                                                  if ( kind == "C1" )
                                                                  {
                                                                    for ( count : Int from 0 to entities.length() )
                                                                      {
                                                                        var localErrors := JSONArray() ;
                                                                        var entity := ( loadEntity("C1", entities.getJSONObject(count).getString("id").parseUUID()) as C1 ) ;
                                                                        if ( entity == null )
                                                                        {
                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                        }
                                                                        else
                                                                        {
                                                                          if ( entity.mayModifySynchronize() )
                                                                          {
                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                            {
                                                                              mapperEditedC1(entity, entities.getJSONObject(count), localErrors);
                                                                              var exceptions := entity.validateSave() ;
                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                              {
                                                                                rollbackAndStartNewTransaction();
                                                                              }
                                                                              else
                                                                              {
                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                              }
                                                                            }
                                                                            else
                                                                            {
                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                            }
                                                                          }
                                                                          else
                                                                          {
                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                          }
                                                                        }
                                                                        if ( localErrors.length() > 0 )
                                                                        {
                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "C1", entities.getJSONObject(count).getString("id")) ;
                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                          {
                                                                            var entity := ( loadEntity("C1", entities.getJSONObject(count).getString("id").parseUUID()) as C1 ) ;
                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                          }
                                                                          errors.put(jsonErrorObject);
                                                                        }
                                                                      }
                                                                  }
                                                                  else
                                                                  {
                                                                    if ( kind == "D1" )
                                                                    {
                                                                      for ( count : Int from 0 to entities.length() )
                                                                        {
                                                                          var localErrors := JSONArray() ;
                                                                          var entity := ( loadEntity("D1", entities.getJSONObject(count).getString("id").parseUUID()) as D1 ) ;
                                                                          if ( entity == null )
                                                                          {
                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                          }
                                                                          else
                                                                          {
                                                                            if ( entity.mayModifySynchronize() )
                                                                            {
                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                              {
                                                                                mapperEditedD1(entity, entities.getJSONObject(count), localErrors);
                                                                                var exceptions := entity.validateSave() ;
                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                {
                                                                                  rollbackAndStartNewTransaction();
                                                                                }
                                                                                else
                                                                                {
                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                }
                                                                              }
                                                                              else
                                                                              {
                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                              }
                                                                            }
                                                                            else
                                                                            {
                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                            }
                                                                          }
                                                                          if ( localErrors.length() > 0 )
                                                                          {
                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "D1", entities.getJSONObject(count).getString("id")) ;
                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                            {
                                                                              var entity := ( loadEntity("D1", entities.getJSONObject(count).getString("id").parseUUID()) as D1 ) ;
                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                            }
                                                                            errors.put(jsonErrorObject);
                                                                          }
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                      if ( kind == "E1" )
                                                                      {
                                                                        for ( count : Int from 0 to entities.length() )
                                                                          {
                                                                            var localErrors := JSONArray() ;
                                                                            var entity := ( loadEntity("E1", entities.getJSONObject(count).getString("id").parseUUID()) as E1 ) ;
                                                                            if ( entity == null )
                                                                            {
                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                            }
                                                                            else
                                                                            {
                                                                              if ( entity.mayModifySynchronize() )
                                                                              {
                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                {
                                                                                  mapperEditedE1(entity, entities.getJSONObject(count), localErrors);
                                                                                  var exceptions := entity.validateSave() ;
                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                  {
                                                                                    rollbackAndStartNewTransaction();
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                  }
                                                                                }
                                                                                else
                                                                                {
                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                }
                                                                              }
                                                                              else
                                                                              {
                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                              }
                                                                            }
                                                                            if ( localErrors.length() > 0 )
                                                                            {
                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "E1", entities.getJSONObject(count).getString("id")) ;
                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                              {
                                                                                var entity := ( loadEntity("E1", entities.getJSONObject(count).getString("id").parseUUID()) as E1 ) ;
                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                              }
                                                                              errors.put(jsonErrorObject);
                                                                            }
                                                                          }
                                                                      }
                                                                      else
                                                                      {
                                                                        if ( kind == "F1" )
                                                                        {
                                                                          for ( count : Int from 0 to entities.length() )
                                                                            {
                                                                              var localErrors := JSONArray() ;
                                                                              var entity := ( loadEntity("F1", entities.getJSONObject(count).getString("id").parseUUID()) as F1 ) ;
                                                                              if ( entity == null )
                                                                              {
                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                              }
                                                                              else
                                                                              {
                                                                                if ( entity.mayModifySynchronize() )
                                                                                {
                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                  {
                                                                                    mapperEditedF1(entity, entities.getJSONObject(count), localErrors);
                                                                                    var exceptions := entity.validateSave() ;
                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                    {
                                                                                      rollbackAndStartNewTransaction();
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                    }
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                  }
                                                                                }
                                                                                else
                                                                                {
                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                }
                                                                              }
                                                                              if ( localErrors.length() > 0 )
                                                                              {
                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "F1", entities.getJSONObject(count).getString("id")) ;
                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                {
                                                                                  var entity := ( loadEntity("F1", entities.getJSONObject(count).getString("id").parseUUID()) as F1 ) ;
                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                }
                                                                                errors.put(jsonErrorObject);
                                                                              }
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                          if ( kind == "G1" )
                                                                          {
                                                                            for ( count : Int from 0 to entities.length() )
                                                                              {
                                                                                var localErrors := JSONArray() ;
                                                                                var entity := ( loadEntity("G1", entities.getJSONObject(count).getString("id").parseUUID()) as G1 ) ;
                                                                                if ( entity == null )
                                                                                {
                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                }
                                                                                else
                                                                                {
                                                                                  if ( entity.mayModifySynchronize() )
                                                                                  {
                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                    {
                                                                                      mapperEditedG1(entity, entities.getJSONObject(count), localErrors);
                                                                                      var exceptions := entity.validateSave() ;
                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                      {
                                                                                        rollbackAndStartNewTransaction();
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                      }
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                    }
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                  }
                                                                                }
                                                                                if ( localErrors.length() > 0 )
                                                                                {
                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "G1", entities.getJSONObject(count).getString("id")) ;
                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                  {
                                                                                    var entity := ( loadEntity("G1", entities.getJSONObject(count).getString("id").parseUUID()) as G1 ) ;
                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                  }
                                                                                  errors.put(jsonErrorObject);
                                                                                }
                                                                              }
                                                                          }
                                                                          else
                                                                          {
                                                                            if ( kind == "H1" )
                                                                            {
                                                                              for ( count : Int from 0 to entities.length() )
                                                                                {
                                                                                  var localErrors := JSONArray() ;
                                                                                  var entity := ( loadEntity("H1", entities.getJSONObject(count).getString("id").parseUUID()) as H1 ) ;
                                                                                  if ( entity == null )
                                                                                  {
                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    if ( entity.mayModifySynchronize() )
                                                                                    {
                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                      {
                                                                                        mapperEditedH1(entity, entities.getJSONObject(count), localErrors);
                                                                                        var exceptions := entity.validateSave() ;
                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                        {
                                                                                          rollbackAndStartNewTransaction();
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                        }
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                      }
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                    }
                                                                                  }
                                                                                  if ( localErrors.length() > 0 )
                                                                                  {
                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "H1", entities.getJSONObject(count).getString("id")) ;
                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                    {
                                                                                      var entity := ( loadEntity("H1", entities.getJSONObject(count).getString("id").parseUUID()) as H1 ) ;
                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                    }
                                                                                    errors.put(jsonErrorObject);
                                                                                  }
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                              if ( kind == "I1" )
                                                                              {
                                                                                for ( count : Int from 0 to entities.length() )
                                                                                  {
                                                                                    var localErrors := JSONArray() ;
                                                                                    var entity := ( loadEntity("I1", entities.getJSONObject(count).getString("id").parseUUID()) as I1 ) ;
                                                                                    if ( entity == null )
                                                                                    {
                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      if ( entity.mayModifySynchronize() )
                                                                                      {
                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                        {
                                                                                          mapperEditedI1(entity, entities.getJSONObject(count), localErrors);
                                                                                          var exceptions := entity.validateSave() ;
                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                          {
                                                                                            rollbackAndStartNewTransaction();
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                          }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                        }
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                      }
                                                                                    }
                                                                                    if ( localErrors.length() > 0 )
                                                                                    {
                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "I1", entities.getJSONObject(count).getString("id")) ;
                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                      {
                                                                                        var entity := ( loadEntity("I1", entities.getJSONObject(count).getString("id").parseUUID()) as I1 ) ;
                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                      }
                                                                                      errors.put(jsonErrorObject);
                                                                                    }
                                                                                  }
                                                                              }
                                                                              else
                                                                              {
                                                                                if ( kind == "J1" )
                                                                                {
                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                    {
                                                                                      var localErrors := JSONArray() ;
                                                                                      var entity := ( loadEntity("J1", entities.getJSONObject(count).getString("id").parseUUID()) as J1 ) ;
                                                                                      if ( entity == null )
                                                                                      {
                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        if ( entity.mayModifySynchronize() )
                                                                                        {
                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                          {
                                                                                            mapperEditedJ1(entity, entities.getJSONObject(count), localErrors);
                                                                                            var exceptions := entity.validateSave() ;
                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                            {
                                                                                              rollbackAndStartNewTransaction();
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                            }
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                          }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                        }
                                                                                      }
                                                                                      if ( localErrors.length() > 0 )
                                                                                      {
                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "J1", entities.getJSONObject(count).getString("id")) ;
                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                        {
                                                                                          var entity := ( loadEntity("J1", entities.getJSONObject(count).getString("id").parseUUID()) as J1 ) ;
                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                        }
                                                                                        errors.put(jsonErrorObject);
                                                                                      }
                                                                                    }
                                                                                }
                                                                                else
                                                                                {
                                                                                  if ( kind == "K1" )
                                                                                  {
                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                      {
                                                                                        var localErrors := JSONArray() ;
                                                                                        var entity := ( loadEntity("K1", entities.getJSONObject(count).getString("id").parseUUID()) as K1 ) ;
                                                                                        if ( entity == null )
                                                                                        {
                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          if ( entity.mayModifySynchronize() )
                                                                                          {
                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                            {
                                                                                              mapperEditedK1(entity, entities.getJSONObject(count), localErrors);
                                                                                              var exceptions := entity.validateSave() ;
                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                              {
                                                                                                rollbackAndStartNewTransaction();
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                              }
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                            }
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                          }
                                                                                        }
                                                                                        if ( localErrors.length() > 0 )
                                                                                        {
                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "K1", entities.getJSONObject(count).getString("id")) ;
                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                          {
                                                                                            var entity := ( loadEntity("K1", entities.getJSONObject(count).getString("id").parseUUID()) as K1 ) ;
                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                          }
                                                                                          errors.put(jsonErrorObject);
                                                                                        }
                                                                                      }
                                                                                  }
                                                                                  else
                                                                                  {
                                                                                    if ( kind == "L1" )
                                                                                    {
                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                        {
                                                                                          var localErrors := JSONArray() ;
                                                                                          var entity := ( loadEntity("L1", entities.getJSONObject(count).getString("id").parseUUID()) as L1 ) ;
                                                                                          if ( entity == null )
                                                                                          {
                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            if ( entity.mayModifySynchronize() )
                                                                                            {
                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                              {
                                                                                                mapperEditedL1(entity, entities.getJSONObject(count), localErrors);
                                                                                                var exceptions := entity.validateSave() ;
                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                {
                                                                                                  rollbackAndStartNewTransaction();
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                }
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                              }
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                            }
                                                                                          }
                                                                                          if ( localErrors.length() > 0 )
                                                                                          {
                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "L1", entities.getJSONObject(count).getString("id")) ;
                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                            {
                                                                                              var entity := ( loadEntity("L1", entities.getJSONObject(count).getString("id").parseUUID()) as L1 ) ;
                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                            }
                                                                                            errors.put(jsonErrorObject);
                                                                                          }
                                                                                        }
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                      if ( kind == "M1" )
                                                                                      {
                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                          {
                                                                                            var localErrors := JSONArray() ;
                                                                                            var entity := ( loadEntity("M1", entities.getJSONObject(count).getString("id").parseUUID()) as M1 ) ;
                                                                                            if ( entity == null )
                                                                                            {
                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              if ( entity.mayModifySynchronize() )
                                                                                              {
                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                {
                                                                                                  mapperEditedM1(entity, entities.getJSONObject(count), localErrors);
                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                  {
                                                                                                    rollbackAndStartNewTransaction();
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                  }
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                }
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                              }
                                                                                            }
                                                                                            if ( localErrors.length() > 0 )
                                                                                            {
                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "M1", entities.getJSONObject(count).getString("id")) ;
                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                              {
                                                                                                var entity := ( loadEntity("M1", entities.getJSONObject(count).getString("id").parseUUID()) as M1 ) ;
                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                              }
                                                                                              errors.put(jsonErrorObject);
                                                                                            }
                                                                                          }
                                                                                      }
                                                                                      else
                                                                                      {
                                                                                        if ( kind == "N1" )
                                                                                        {
                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                            {
                                                                                              var localErrors := JSONArray() ;
                                                                                              var entity := ( loadEntity("N1", entities.getJSONObject(count).getString("id").parseUUID()) as N1 ) ;
                                                                                              if ( entity == null )
                                                                                              {
                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                {
                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                  {
                                                                                                    mapperEditedN1(entity, entities.getJSONObject(count), localErrors);
                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                    {
                                                                                                      rollbackAndStartNewTransaction();
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                    }
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                  }
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                }
                                                                                              }
                                                                                              if ( localErrors.length() > 0 )
                                                                                              {
                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "N1", entities.getJSONObject(count).getString("id")) ;
                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                {
                                                                                                  var entity := ( loadEntity("N1", entities.getJSONObject(count).getString("id").parseUUID()) as N1 ) ;
                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                }
                                                                                                errors.put(jsonErrorObject);
                                                                                              }
                                                                                            }
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                          if ( kind == "O1" )
                                                                                          {
                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                              {
                                                                                                var localErrors := JSONArray() ;
                                                                                                var entity := ( loadEntity("O1", entities.getJSONObject(count).getString("id").parseUUID()) as O1 ) ;
                                                                                                if ( entity == null )
                                                                                                {
                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                  {
                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                    {
                                                                                                      mapperEditedO1(entity, entities.getJSONObject(count), localErrors);
                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                      {
                                                                                                        rollbackAndStartNewTransaction();
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                      }
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                    }
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                  }
                                                                                                }
                                                                                                if ( localErrors.length() > 0 )
                                                                                                {
                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "O1", entities.getJSONObject(count).getString("id")) ;
                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                  {
                                                                                                    var entity := ( loadEntity("O1", entities.getJSONObject(count).getString("id").parseUUID()) as O1 ) ;
                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                  }
                                                                                                  errors.put(jsonErrorObject);
                                                                                                }
                                                                                              }
                                                                                          }
                                                                                          else
                                                                                          {
                                                                                            if ( kind == "P1" )
                                                                                            {
                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                {
                                                                                                  var localErrors := JSONArray() ;
                                                                                                  var entity := ( loadEntity("P1", entities.getJSONObject(count).getString("id").parseUUID()) as P1 ) ;
                                                                                                  if ( entity == null )
                                                                                                  {
                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                    {
                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                      {
                                                                                                        mapperEditedP1(entity, entities.getJSONObject(count), localErrors);
                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                        {
                                                                                                          rollbackAndStartNewTransaction();
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                        }
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                      }
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                    }
                                                                                                  }
                                                                                                  if ( localErrors.length() > 0 )
                                                                                                  {
                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "P1", entities.getJSONObject(count).getString("id")) ;
                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                    {
                                                                                                      var entity := ( loadEntity("P1", entities.getJSONObject(count).getString("id").parseUUID()) as P1 ) ;
                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                    }
                                                                                                    errors.put(jsonErrorObject);
                                                                                                  }
                                                                                                }
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                              if ( kind == "Q1" )
                                                                                              {
                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                  {
                                                                                                    var localErrors := JSONArray() ;
                                                                                                    var entity := ( loadEntity("Q1", entities.getJSONObject(count).getString("id").parseUUID()) as Q1 ) ;
                                                                                                    if ( entity == null )
                                                                                                    {
                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                      {
                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                        {
                                                                                                          mapperEditedQ1(entity, entities.getJSONObject(count), localErrors);
                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                          {
                                                                                                            rollbackAndStartNewTransaction();
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                          }
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                        }
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                      }
                                                                                                    }
                                                                                                    if ( localErrors.length() > 0 )
                                                                                                    {
                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Q1", entities.getJSONObject(count).getString("id")) ;
                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                      {
                                                                                                        var entity := ( loadEntity("Q1", entities.getJSONObject(count).getString("id").parseUUID()) as Q1 ) ;
                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                      }
                                                                                                      errors.put(jsonErrorObject);
                                                                                                    }
                                                                                                  }
                                                                                              }
                                                                                              else
                                                                                              {
                                                                                                if ( kind == "R1" )
                                                                                                {
                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                    {
                                                                                                      var localErrors := JSONArray() ;
                                                                                                      var entity := ( loadEntity("R1", entities.getJSONObject(count).getString("id").parseUUID()) as R1 ) ;
                                                                                                      if ( entity == null )
                                                                                                      {
                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                        {
                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                          {
                                                                                                            mapperEditedR1(entity, entities.getJSONObject(count), localErrors);
                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                            {
                                                                                                              rollbackAndStartNewTransaction();
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                            }
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                          }
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                        }
                                                                                                      }
                                                                                                      if ( localErrors.length() > 0 )
                                                                                                      {
                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "R1", entities.getJSONObject(count).getString("id")) ;
                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                        {
                                                                                                          var entity := ( loadEntity("R1", entities.getJSONObject(count).getString("id").parseUUID()) as R1 ) ;
                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                        }
                                                                                                        errors.put(jsonErrorObject);
                                                                                                      }
                                                                                                    }
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                  if ( kind == "S1" )
                                                                                                  {
                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                      {
                                                                                                        var localErrors := JSONArray() ;
                                                                                                        var entity := ( loadEntity("S1", entities.getJSONObject(count).getString("id").parseUUID()) as S1 ) ;
                                                                                                        if ( entity == null )
                                                                                                        {
                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                          {
                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                            {
                                                                                                              mapperEditedS1(entity, entities.getJSONObject(count), localErrors);
                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                              {
                                                                                                                rollbackAndStartNewTransaction();
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                              }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                            }
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                          }
                                                                                                        }
                                                                                                        if ( localErrors.length() > 0 )
                                                                                                        {
                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "S1", entities.getJSONObject(count).getString("id")) ;
                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                          {
                                                                                                            var entity := ( loadEntity("S1", entities.getJSONObject(count).getString("id").parseUUID()) as S1 ) ;
                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                          }
                                                                                                          errors.put(jsonErrorObject);
                                                                                                        }
                                                                                                      }
                                                                                                  }
                                                                                                  else
                                                                                                  {
                                                                                                    if ( kind == "T1" )
                                                                                                    {
                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                        {
                                                                                                          var localErrors := JSONArray() ;
                                                                                                          var entity := ( loadEntity("T1", entities.getJSONObject(count).getString("id").parseUUID()) as T1 ) ;
                                                                                                          if ( entity == null )
                                                                                                          {
                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                            {
                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                              {
                                                                                                                mapperEditedT1(entity, entities.getJSONObject(count), localErrors);
                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                {
                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                }
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                              }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                            }
                                                                                                          }
                                                                                                          if ( localErrors.length() > 0 )
                                                                                                          {
                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "T1", entities.getJSONObject(count).getString("id")) ;
                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                            {
                                                                                                              var entity := ( loadEntity("T1", entities.getJSONObject(count).getString("id").parseUUID()) as T1 ) ;
                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                            }
                                                                                                            errors.put(jsonErrorObject);
                                                                                                          }
                                                                                                        }
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                      if ( kind == "U1" )
                                                                                                      {
                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                          {
                                                                                                            var localErrors := JSONArray() ;
                                                                                                            var entity := ( loadEntity("U1", entities.getJSONObject(count).getString("id").parseUUID()) as U1 ) ;
                                                                                                            if ( entity == null )
                                                                                                            {
                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                              {
                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                {
                                                                                                                  mapperEditedU1(entity, entities.getJSONObject(count), localErrors);
                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                  {
                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                  }
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                }
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                              }
                                                                                                            }
                                                                                                            if ( localErrors.length() > 0 )
                                                                                                            {
                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "U1", entities.getJSONObject(count).getString("id")) ;
                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                              {
                                                                                                                var entity := ( loadEntity("U1", entities.getJSONObject(count).getString("id").parseUUID()) as U1 ) ;
                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                              }
                                                                                                              errors.put(jsonErrorObject);
                                                                                                            }
                                                                                                          }
                                                                                                      }
                                                                                                      else
                                                                                                      {
                                                                                                        if ( kind == "V1" )
                                                                                                        {
                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                            {
                                                                                                              var localErrors := JSONArray() ;
                                                                                                              var entity := ( loadEntity("V1", entities.getJSONObject(count).getString("id").parseUUID()) as V1 ) ;
                                                                                                              if ( entity == null )
                                                                                                              {
                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                {
                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                  {
                                                                                                                    mapperEditedV1(entity, entities.getJSONObject(count), localErrors);
                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                    {
                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                    }
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                  }
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                }
                                                                                                              }
                                                                                                              if ( localErrors.length() > 0 )
                                                                                                              {
                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "V1", entities.getJSONObject(count).getString("id")) ;
                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                {
                                                                                                                  var entity := ( loadEntity("V1", entities.getJSONObject(count).getString("id").parseUUID()) as V1 ) ;
                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                }
                                                                                                                errors.put(jsonErrorObject);
                                                                                                              }
                                                                                                            }
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                          if ( kind == "W1" )
                                                                                                          {
                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                              {
                                                                                                                var localErrors := JSONArray() ;
                                                                                                                var entity := ( loadEntity("W1", entities.getJSONObject(count).getString("id").parseUUID()) as W1 ) ;
                                                                                                                if ( entity == null )
                                                                                                                {
                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                  {
                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                    {
                                                                                                                      mapperEditedW1(entity, entities.getJSONObject(count), localErrors);
                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                      {
                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                      }
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                    }
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                  }
                                                                                                                }
                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                {
                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "W1", entities.getJSONObject(count).getString("id")) ;
                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                  {
                                                                                                                    var entity := ( loadEntity("W1", entities.getJSONObject(count).getString("id").parseUUID()) as W1 ) ;
                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                  }
                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                }
                                                                                                              }
                                                                                                          }
                                                                                                          else
                                                                                                          {
                                                                                                            if ( kind == "X1" )
                                                                                                            {
                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                {
                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                  var entity := ( loadEntity("X1", entities.getJSONObject(count).getString("id").parseUUID()) as X1 ) ;
                                                                                                                  if ( entity == null )
                                                                                                                  {
                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                    {
                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                      {
                                                                                                                        mapperEditedX1(entity, entities.getJSONObject(count), localErrors);
                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                        {
                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                        }
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                      }
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                    }
                                                                                                                  }
                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                  {
                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "X1", entities.getJSONObject(count).getString("id")) ;
                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                    {
                                                                                                                      var entity := ( loadEntity("X1", entities.getJSONObject(count).getString("id").parseUUID()) as X1 ) ;
                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                    }
                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                  }
                                                                                                                }
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                              if ( kind == "Y1" )
                                                                                                              {
                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                  {
                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                    var entity := ( loadEntity("Y1", entities.getJSONObject(count).getString("id").parseUUID()) as Y1 ) ;
                                                                                                                    if ( entity == null )
                                                                                                                    {
                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                      {
                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                        {
                                                                                                                          mapperEditedY1(entity, entities.getJSONObject(count), localErrors);
                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                          {
                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                          }
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                        }
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                      }
                                                                                                                    }
                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                    {
                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Y1", entities.getJSONObject(count).getString("id")) ;
                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                      {
                                                                                                                        var entity := ( loadEntity("Y1", entities.getJSONObject(count).getString("id").parseUUID()) as Y1 ) ;
                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                      }
                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                    }
                                                                                                                  }
                                                                                                              }
                                                                                                              else
                                                                                                              {
                                                                                                                if ( kind == "Z1" )
                                                                                                                {
                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                    {
                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                      var entity := ( loadEntity("Z1", entities.getJSONObject(count).getString("id").parseUUID()) as Z1 ) ;
                                                                                                                      if ( entity == null )
                                                                                                                      {
                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                        {
                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                          {
                                                                                                                            mapperEditedZ1(entity, entities.getJSONObject(count), localErrors);
                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                            {
                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                            }
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                          }
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                        }
                                                                                                                      }
                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                      {
                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Z1", entities.getJSONObject(count).getString("id")) ;
                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                        {
                                                                                                                          var entity := ( loadEntity("Z1", entities.getJSONObject(count).getString("id").parseUUID()) as Z1 ) ;
                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                        }
                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                      }
                                                                                                                    }
                                                                                                                }
                                                                                                                else
                                                                                                                {
                                                                                                                  if ( kind == "A2" )
                                                                                                                  {
                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                      {
                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                        var entity := ( loadEntity("A2", entities.getJSONObject(count).getString("id").parseUUID()) as A2 ) ;
                                                                                                                        if ( entity == null )
                                                                                                                        {
                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                          {
                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                            {
                                                                                                                              mapperEditedA2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                              {
                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                              }
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                            }
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                          }
                                                                                                                        }
                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                        {
                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "A2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                          {
                                                                                                                            var entity := ( loadEntity("A2", entities.getJSONObject(count).getString("id").parseUUID()) as A2 ) ;
                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                          }
                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                        }
                                                                                                                      }
                                                                                                                  }
                                                                                                                  else
                                                                                                                  {
                                                                                                                    if ( kind == "B2" )
                                                                                                                    {
                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                        {
                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                          var entity := ( loadEntity("B2", entities.getJSONObject(count).getString("id").parseUUID()) as B2 ) ;
                                                                                                                          if ( entity == null )
                                                                                                                          {
                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                            {
                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                              {
                                                                                                                                mapperEditedB2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                {
                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                }
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                              }
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                            }
                                                                                                                          }
                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                          {
                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "B2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                            {
                                                                                                                              var entity := ( loadEntity("B2", entities.getJSONObject(count).getString("id").parseUUID()) as B2 ) ;
                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                            }
                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                          }
                                                                                                                        }
                                                                                                                    }
                                                                                                                    else
                                                                                                                    {
                                                                                                                      if ( kind == "C2" )
                                                                                                                      {
                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                          {
                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                            var entity := ( loadEntity("C2", entities.getJSONObject(count).getString("id").parseUUID()) as C2 ) ;
                                                                                                                            if ( entity == null )
                                                                                                                            {
                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                              {
                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                {
                                                                                                                                  mapperEditedC2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                  {
                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                  }
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                }
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                              }
                                                                                                                            }
                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                            {
                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "C2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                              {
                                                                                                                                var entity := ( loadEntity("C2", entities.getJSONObject(count).getString("id").parseUUID()) as C2 ) ;
                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                              }
                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                            }
                                                                                                                          }
                                                                                                                      }
                                                                                                                      else
                                                                                                                      {
                                                                                                                        if ( kind == "D2" )
                                                                                                                        {
                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                            {
                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                              var entity := ( loadEntity("D2", entities.getJSONObject(count).getString("id").parseUUID()) as D2 ) ;
                                                                                                                              if ( entity == null )
                                                                                                                              {
                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                {
                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                  {
                                                                                                                                    mapperEditedD2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                    {
                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                  }
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                }
                                                                                                                              }
                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                              {
                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "D2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                {
                                                                                                                                  var entity := ( loadEntity("D2", entities.getJSONObject(count).getString("id").parseUUID()) as D2 ) ;
                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                }
                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                              }
                                                                                                                            }
                                                                                                                        }
                                                                                                                        else
                                                                                                                        {
                                                                                                                          if ( kind == "E2" )
                                                                                                                          {
                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                              {
                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                var entity := ( loadEntity("E2", entities.getJSONObject(count).getString("id").parseUUID()) as E2 ) ;
                                                                                                                                if ( entity == null )
                                                                                                                                {
                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                  {
                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                    {
                                                                                                                                      mapperEditedE2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                      {
                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                  }
                                                                                                                                }
                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                {
                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "E2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                  {
                                                                                                                                    var entity := ( loadEntity("E2", entities.getJSONObject(count).getString("id").parseUUID()) as E2 ) ;
                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                  }
                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                }
                                                                                                                              }
                                                                                                                          }
                                                                                                                          else
                                                                                                                          {
                                                                                                                            if ( kind == "F2" )
                                                                                                                            {
                                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                                {
                                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                                  var entity := ( loadEntity("F2", entities.getJSONObject(count).getString("id").parseUUID()) as F2 ) ;
                                                                                                                                  if ( entity == null )
                                                                                                                                  {
                                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                                    {
                                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                      {
                                                                                                                                        mapperEditedF2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                        {
                                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                                  {
                                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "F2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                    {
                                                                                                                                      var entity := ( loadEntity("F2", entities.getJSONObject(count).getString("id").parseUUID()) as F2 ) ;
                                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                    }
                                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                                  }
                                                                                                                                }
                                                                                                                            }
                                                                                                                            else
                                                                                                                            {
                                                                                                                              if ( kind == "G2" )
                                                                                                                              {
                                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                                  {
                                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                                    var entity := ( loadEntity("G2", entities.getJSONObject(count).getString("id").parseUUID()) as G2 ) ;
                                                                                                                                    if ( entity == null )
                                                                                                                                    {
                                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                                      {
                                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                        {
                                                                                                                                          mapperEditedG2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                          {
                                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                                    {
                                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "G2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                      {
                                                                                                                                        var entity := ( loadEntity("G2", entities.getJSONObject(count).getString("id").parseUUID()) as G2 ) ;
                                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                      }
                                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                              }
                                                                                                                              else
                                                                                                                              {
                                                                                                                                if ( kind == "H2" )
                                                                                                                                {
                                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                                    {
                                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                                      var entity := ( loadEntity("H2", entities.getJSONObject(count).getString("id").parseUUID()) as H2 ) ;
                                                                                                                                      if ( entity == null )
                                                                                                                                      {
                                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                                        {
                                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                          {
                                                                                                                                            mapperEditedH2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                            {
                                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                                      {
                                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "H2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                        {
                                                                                                                                          var entity := ( loadEntity("H2", entities.getJSONObject(count).getString("id").parseUUID()) as H2 ) ;
                                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                        }
                                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                  if ( kind == "I2" )
                                                                                                                                  {
                                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                                      {
                                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                                        var entity := ( loadEntity("I2", entities.getJSONObject(count).getString("id").parseUUID()) as I2 ) ;
                                                                                                                                        if ( entity == null )
                                                                                                                                        {
                                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                                          {
                                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                            {
                                                                                                                                              mapperEditedI2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                              {
                                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                                              }
                                                                                                                                              else
                                                                                                                                              {
                                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                                        {
                                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "I2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                          {
                                                                                                                                            var entity := ( loadEntity("I2", entities.getJSONObject(count).getString("id").parseUUID()) as I2 ) ;
                                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                          }
                                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                  }
                                                                                                                                  else
                                                                                                                                  {
                                                                                                                                    if ( kind == "J2" )
                                                                                                                                    {
                                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                                        {
                                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                                          var entity := ( loadEntity("J2", entities.getJSONObject(count).getString("id").parseUUID()) as J2 ) ;
                                                                                                                                          if ( entity == null )
                                                                                                                                          {
                                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                                            {
                                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                              {
                                                                                                                                                mapperEditedJ2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                {
                                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                              else
                                                                                                                                              {
                                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                                          {
                                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "J2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                            {
                                                                                                                                              var entity := ( loadEntity("J2", entities.getJSONObject(count).getString("id").parseUUID()) as J2 ) ;
                                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                            }
                                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                    else
                                                                                                                                    {
                                                                                                                                      if ( kind == "K2" )
                                                                                                                                      {
                                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                                          {
                                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                                            var entity := ( loadEntity("K2", entities.getJSONObject(count).getString("id").parseUUID()) as K2 ) ;
                                                                                                                                            if ( entity == null )
                                                                                                                                            {
                                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                                              {
                                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                {
                                                                                                                                                  mapperEditedK2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                  {
                                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                                  }
                                                                                                                                                  else
                                                                                                                                                  {
                                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                              else
                                                                                                                                              {
                                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                                            {
                                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "K2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                              {
                                                                                                                                                var entity := ( loadEntity("K2", entities.getJSONObject(count).getString("id").parseUUID()) as K2 ) ;
                                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                              }
                                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                      }
                                                                                                                                      else
                                                                                                                                      {
                                                                                                                                        if ( kind == "L2" )
                                                                                                                                        {
                                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                                            {
                                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                                              var entity := ( loadEntity("L2", entities.getJSONObject(count).getString("id").parseUUID()) as L2 ) ;
                                                                                                                                              if ( entity == null )
                                                                                                                                              {
                                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                              }
                                                                                                                                              else
                                                                                                                                              {
                                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                                {
                                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                  {
                                                                                                                                                    mapperEditedL2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                    {
                                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                  else
                                                                                                                                                  {
                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                                              {
                                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "L2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                {
                                                                                                                                                  var entity := ( loadEntity("L2", entities.getJSONObject(count).getString("id").parseUUID()) as L2 ) ;
                                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                }
                                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        else
                                                                                                                                        {
                                                                                                                                          if ( kind == "M2" )
                                                                                                                                          {
                                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                                              {
                                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                                var entity := ( loadEntity("M2", entities.getJSONObject(count).getString("id").parseUUID()) as M2 ) ;
                                                                                                                                                if ( entity == null )
                                                                                                                                                {
                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                                  {
                                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                    {
                                                                                                                                                      mapperEditedM2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                      {
                                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                  else
                                                                                                                                                  {
                                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                                {
                                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "M2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                  {
                                                                                                                                                    var entity := ( loadEntity("M2", entities.getJSONObject(count).getString("id").parseUUID()) as M2 ) ;
                                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                  }
                                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                          }
                                                                                                                                          else
                                                                                                                                          {
                                                                                                                                            if ( kind == "N2" )
                                                                                                                                            {
                                                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                                                {
                                                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                                                  var entity := ( loadEntity("N2", entities.getJSONObject(count).getString("id").parseUUID()) as N2 ) ;
                                                                                                                                                  if ( entity == null )
                                                                                                                                                  {
                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                  }
                                                                                                                                                  else
                                                                                                                                                  {
                                                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                                                    {
                                                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                      {
                                                                                                                                                        mapperEditedN2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                        {
                                                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                                                  {
                                                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "N2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                    {
                                                                                                                                                      var entity := ( loadEntity("N2", entities.getJSONObject(count).getString("id").parseUUID()) as N2 ) ;
                                                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                    }
                                                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                            else
                                                                                                                                            {
                                                                                                                                              if ( kind == "O2" )
                                                                                                                                              {
                                                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                                                  {
                                                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                                                    var entity := ( loadEntity("O2", entities.getJSONObject(count).getString("id").parseUUID()) as O2 ) ;
                                                                                                                                                    if ( entity == null )
                                                                                                                                                    {
                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                                                      {
                                                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                        {
                                                                                                                                                          mapperEditedO2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                          {
                                                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                                                          }
                                                                                                                                                          else
                                                                                                                                                          {
                                                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                                                    {
                                                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "O2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                      {
                                                                                                                                                        var entity := ( loadEntity("O2", entities.getJSONObject(count).getString("id").parseUUID()) as O2 ) ;
                                                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                      }
                                                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                              }
                                                                                                                                              else
                                                                                                                                              {
                                                                                                                                                if ( kind == "P2" )
                                                                                                                                                {
                                                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                                                    {
                                                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                                                      var entity := ( loadEntity("P2", entities.getJSONObject(count).getString("id").parseUUID()) as P2 ) ;
                                                                                                                                                      if ( entity == null )
                                                                                                                                                      {
                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                                                        {
                                                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                          {
                                                                                                                                                            mapperEditedP2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                            {
                                                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                          else
                                                                                                                                                          {
                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                                                      {
                                                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "P2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                        {
                                                                                                                                                          var entity := ( loadEntity("P2", entities.getJSONObject(count).getString("id").parseUUID()) as P2 ) ;
                                                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                        }
                                                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                else
                                                                                                                                                {
                                                                                                                                                  if ( kind == "Q2" )
                                                                                                                                                  {
                                                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                                                      {
                                                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                                                        var entity := ( loadEntity("Q2", entities.getJSONObject(count).getString("id").parseUUID()) as Q2 ) ;
                                                                                                                                                        if ( entity == null )
                                                                                                                                                        {
                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                                                          {
                                                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                            {
                                                                                                                                                              mapperEditedQ2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                              {
                                                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                                                              }
                                                                                                                                                              else
                                                                                                                                                              {
                                                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                          else
                                                                                                                                                          {
                                                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                                                        {
                                                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Q2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                          {
                                                                                                                                                            var entity := ( loadEntity("Q2", entities.getJSONObject(count).getString("id").parseUUID()) as Q2 ) ;
                                                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                          }
                                                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                  }
                                                                                                                                                  else
                                                                                                                                                  {
                                                                                                                                                    if ( kind == "R2" )
                                                                                                                                                    {
                                                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                                                        {
                                                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                                                          var entity := ( loadEntity("R2", entities.getJSONObject(count).getString("id").parseUUID()) as R2 ) ;
                                                                                                                                                          if ( entity == null )
                                                                                                                                                          {
                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                          }
                                                                                                                                                          else
                                                                                                                                                          {
                                                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                                                            {
                                                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                              {
                                                                                                                                                                mapperEditedR2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                {
                                                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                                                }
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                              else
                                                                                                                                                              {
                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                                                          {
                                                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "R2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                            {
                                                                                                                                                              var entity := ( loadEntity("R2", entities.getJSONObject(count).getString("id").parseUUID()) as R2 ) ;
                                                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                            }
                                                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                    else
                                                                                                                                                    {
                                                                                                                                                      if ( kind == "S2" )
                                                                                                                                                      {
                                                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                                                          {
                                                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                                                            var entity := ( loadEntity("S2", entities.getJSONObject(count).getString("id").parseUUID()) as S2 ) ;
                                                                                                                                                            if ( entity == null )
                                                                                                                                                            {
                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                                                              {
                                                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                {
                                                                                                                                                                  mapperEditedS2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                  {
                                                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                                                  }
                                                                                                                                                                  else
                                                                                                                                                                  {
                                                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                              else
                                                                                                                                                              {
                                                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                                                            {
                                                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "S2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                              {
                                                                                                                                                                var entity := ( loadEntity("S2", entities.getJSONObject(count).getString("id").parseUUID()) as S2 ) ;
                                                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                              }
                                                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                      }
                                                                                                                                                      else
                                                                                                                                                      {
                                                                                                                                                        if ( kind == "T2" )
                                                                                                                                                        {
                                                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                                                            {
                                                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                                                              var entity := ( loadEntity("T2", entities.getJSONObject(count).getString("id").parseUUID()) as T2 ) ;
                                                                                                                                                              if ( entity == null )
                                                                                                                                                              {
                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                              }
                                                                                                                                                              else
                                                                                                                                                              {
                                                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                                                {
                                                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                  {
                                                                                                                                                                    mapperEditedT2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                    {
                                                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                                                    }
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                  else
                                                                                                                                                                  {
                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                                                              {
                                                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "T2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                {
                                                                                                                                                                  var entity := ( loadEntity("T2", entities.getJSONObject(count).getString("id").parseUUID()) as T2 ) ;
                                                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                }
                                                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        else
                                                                                                                                                        {
                                                                                                                                                          if ( kind == "U2" )
                                                                                                                                                          {
                                                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                                                              {
                                                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                                                var entity := ( loadEntity("U2", entities.getJSONObject(count).getString("id").parseUUID()) as U2 ) ;
                                                                                                                                                                if ( entity == null )
                                                                                                                                                                {
                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                }
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                                                  {
                                                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                    {
                                                                                                                                                                      mapperEditedU2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                      {
                                                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                                                      }
                                                                                                                                                                      else
                                                                                                                                                                      {
                                                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                  else
                                                                                                                                                                  {
                                                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                                                {
                                                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "U2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                  {
                                                                                                                                                                    var entity := ( loadEntity("U2", entities.getJSONObject(count).getString("id").parseUUID()) as U2 ) ;
                                                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                  }
                                                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                          }
                                                                                                                                                          else
                                                                                                                                                          {
                                                                                                                                                            if ( kind == "V2" )
                                                                                                                                                            {
                                                                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                                                                {
                                                                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                                                                  var entity := ( loadEntity("V2", entities.getJSONObject(count).getString("id").parseUUID()) as V2 ) ;
                                                                                                                                                                  if ( entity == null )
                                                                                                                                                                  {
                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                  }
                                                                                                                                                                  else
                                                                                                                                                                  {
                                                                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                                                                    {
                                                                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                      {
                                                                                                                                                                        mapperEditedV2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                        {
                                                                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                                                                        }
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                      else
                                                                                                                                                                      {
                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                                                                  {
                                                                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "V2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                    {
                                                                                                                                                                      var entity := ( loadEntity("V2", entities.getJSONObject(count).getString("id").parseUUID()) as V2 ) ;
                                                                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                    }
                                                                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                            else
                                                                                                                                                            {
                                                                                                                                                              if ( kind == "W2" )
                                                                                                                                                              {
                                                                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                                                                  {
                                                                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                                                                    var entity := ( loadEntity("W2", entities.getJSONObject(count).getString("id").parseUUID()) as W2 ) ;
                                                                                                                                                                    if ( entity == null )
                                                                                                                                                                    {
                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                    }
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                                                                      {
                                                                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                        {
                                                                                                                                                                          mapperEditedW2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                          {
                                                                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                                                                          }
                                                                                                                                                                          else
                                                                                                                                                                          {
                                                                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                      else
                                                                                                                                                                      {
                                                                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                                                                    {
                                                                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "W2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                      {
                                                                                                                                                                        var entity := ( loadEntity("W2", entities.getJSONObject(count).getString("id").parseUUID()) as W2 ) ;
                                                                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                      }
                                                                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                              }
                                                                                                                                                              else
                                                                                                                                                              {
                                                                                                                                                                if ( kind == "X2" )
                                                                                                                                                                {
                                                                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                                                                    {
                                                                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                                                                      var entity := ( loadEntity("X2", entities.getJSONObject(count).getString("id").parseUUID()) as X2 ) ;
                                                                                                                                                                      if ( entity == null )
                                                                                                                                                                      {
                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                      }
                                                                                                                                                                      else
                                                                                                                                                                      {
                                                                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                                                                        {
                                                                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                          {
                                                                                                                                                                            mapperEditedX2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                            {
                                                                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                                                                            }
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                          else
                                                                                                                                                                          {
                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                                                                      {
                                                                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "X2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                        {
                                                                                                                                                                          var entity := ( loadEntity("X2", entities.getJSONObject(count).getString("id").parseUUID()) as X2 ) ;
                                                                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                        }
                                                                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                else
                                                                                                                                                                {
                                                                                                                                                                  if ( kind == "Y2" )
                                                                                                                                                                  {
                                                                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                                                                      {
                                                                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                                                                        var entity := ( loadEntity("Y2", entities.getJSONObject(count).getString("id").parseUUID()) as Y2 ) ;
                                                                                                                                                                        if ( entity == null )
                                                                                                                                                                        {
                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                        }
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                                                                          {
                                                                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                            {
                                                                                                                                                                              mapperEditedY2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                              {
                                                                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                                                                              }
                                                                                                                                                                              else
                                                                                                                                                                              {
                                                                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                          else
                                                                                                                                                                          {
                                                                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                                                                        {
                                                                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Y2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                          {
                                                                                                                                                                            var entity := ( loadEntity("Y2", entities.getJSONObject(count).getString("id").parseUUID()) as Y2 ) ;
                                                                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                          }
                                                                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                  }
                                                                                                                                                                  else
                                                                                                                                                                  {
                                                                                                                                                                    if ( kind == "Z2" )
                                                                                                                                                                    {
                                                                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                                                                        {
                                                                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                                                                          var entity := ( loadEntity("Z2", entities.getJSONObject(count).getString("id").parseUUID()) as Z2 ) ;
                                                                                                                                                                          if ( entity == null )
                                                                                                                                                                          {
                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                          }
                                                                                                                                                                          else
                                                                                                                                                                          {
                                                                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                                                                            {
                                                                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                              {
                                                                                                                                                                                mapperEditedZ2(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                {
                                                                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                                                                }
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                              else
                                                                                                                                                                              {
                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                                                                          {
                                                                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Z2", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                            {
                                                                                                                                                                              var entity := ( loadEntity("Z2", entities.getJSONObject(count).getString("id").parseUUID()) as Z2 ) ;
                                                                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                            }
                                                                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                    else
                                                                                                                                                                    {
                                                                                                                                                                      if ( kind == "A3" )
                                                                                                                                                                      {
                                                                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                                                                          {
                                                                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                                                                            var entity := ( loadEntity("A3", entities.getJSONObject(count).getString("id").parseUUID()) as A3 ) ;
                                                                                                                                                                            if ( entity == null )
                                                                                                                                                                            {
                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                            }
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                                                                              {
                                                                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                {
                                                                                                                                                                                  mapperEditedA3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                  {
                                                                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                                                                  }
                                                                                                                                                                                  else
                                                                                                                                                                                  {
                                                                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                              else
                                                                                                                                                                              {
                                                                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                                                                            {
                                                                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "A3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                              {
                                                                                                                                                                                var entity := ( loadEntity("A3", entities.getJSONObject(count).getString("id").parseUUID()) as A3 ) ;
                                                                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                              }
                                                                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                      }
                                                                                                                                                                      else
                                                                                                                                                                      {
                                                                                                                                                                        if ( kind == "B3" )
                                                                                                                                                                        {
                                                                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                                                                            {
                                                                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                                                                              var entity := ( loadEntity("B3", entities.getJSONObject(count).getString("id").parseUUID()) as B3 ) ;
                                                                                                                                                                              if ( entity == null )
                                                                                                                                                                              {
                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                              }
                                                                                                                                                                              else
                                                                                                                                                                              {
                                                                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                                                                {
                                                                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                  {
                                                                                                                                                                                    mapperEditedB3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                    {
                                                                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                                                                    }
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                  else
                                                                                                                                                                                  {
                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                                                                              {
                                                                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "B3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                {
                                                                                                                                                                                  var entity := ( loadEntity("B3", entities.getJSONObject(count).getString("id").parseUUID()) as B3 ) ;
                                                                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                }
                                                                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        else
                                                                                                                                                                        {
                                                                                                                                                                          if ( kind == "C3" )
                                                                                                                                                                          {
                                                                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                                                                              {
                                                                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                                                                var entity := ( loadEntity("C3", entities.getJSONObject(count).getString("id").parseUUID()) as C3 ) ;
                                                                                                                                                                                if ( entity == null )
                                                                                                                                                                                {
                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                }
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                                                                  {
                                                                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                    {
                                                                                                                                                                                      mapperEditedC3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                      {
                                                                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                                                                      }
                                                                                                                                                                                      else
                                                                                                                                                                                      {
                                                                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                  else
                                                                                                                                                                                  {
                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                                                                {
                                                                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "C3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                  {
                                                                                                                                                                                    var entity := ( loadEntity("C3", entities.getJSONObject(count).getString("id").parseUUID()) as C3 ) ;
                                                                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                  }
                                                                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                          }
                                                                                                                                                                          else
                                                                                                                                                                          {
                                                                                                                                                                            if ( kind == "D3" )
                                                                                                                                                                            {
                                                                                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                {
                                                                                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                                                                                  var entity := ( loadEntity("D3", entities.getJSONObject(count).getString("id").parseUUID()) as D3 ) ;
                                                                                                                                                                                  if ( entity == null )
                                                                                                                                                                                  {
                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                  }
                                                                                                                                                                                  else
                                                                                                                                                                                  {
                                                                                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                                                                                    {
                                                                                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                      {
                                                                                                                                                                                        mapperEditedD3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                        {
                                                                                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                                                                                        }
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                      else
                                                                                                                                                                                      {
                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                                                                                  {
                                                                                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "D3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                    {
                                                                                                                                                                                      var entity := ( loadEntity("D3", entities.getJSONObject(count).getString("id").parseUUID()) as D3 ) ;
                                                                                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                    }
                                                                                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                            else
                                                                                                                                                                            {
                                                                                                                                                                              if ( kind == "E3" )
                                                                                                                                                                              {
                                                                                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                  {
                                                                                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                                                                                    var entity := ( loadEntity("E3", entities.getJSONObject(count).getString("id").parseUUID()) as E3 ) ;
                                                                                                                                                                                    if ( entity == null )
                                                                                                                                                                                    {
                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                    }
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                                                                                      {
                                                                                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                        {
                                                                                                                                                                                          mapperEditedE3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                          {
                                                                                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                                                                                          }
                                                                                                                                                                                          else
                                                                                                                                                                                          {
                                                                                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                      else
                                                                                                                                                                                      {
                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                                                                                    {
                                                                                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "E3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                      {
                                                                                                                                                                                        var entity := ( loadEntity("E3", entities.getJSONObject(count).getString("id").parseUUID()) as E3 ) ;
                                                                                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                      }
                                                                                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                              }
                                                                                                                                                                              else
                                                                                                                                                                              {
                                                                                                                                                                                if ( kind == "F3" )
                                                                                                                                                                                {
                                                                                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                    {
                                                                                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                                                                                      var entity := ( loadEntity("F3", entities.getJSONObject(count).getString("id").parseUUID()) as F3 ) ;
                                                                                                                                                                                      if ( entity == null )
                                                                                                                                                                                      {
                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                      }
                                                                                                                                                                                      else
                                                                                                                                                                                      {
                                                                                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                                                                                        {
                                                                                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                          {
                                                                                                                                                                                            mapperEditedF3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                            {
                                                                                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                                                                                            }
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                          else
                                                                                                                                                                                          {
                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                                                                                      {
                                                                                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "F3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                        {
                                                                                                                                                                                          var entity := ( loadEntity("F3", entities.getJSONObject(count).getString("id").parseUUID()) as F3 ) ;
                                                                                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                        }
                                                                                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                                else
                                                                                                                                                                                {
                                                                                                                                                                                  if ( kind == "G3" )
                                                                                                                                                                                  {
                                                                                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                      {
                                                                                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                                                                                        var entity := ( loadEntity("G3", entities.getJSONObject(count).getString("id").parseUUID()) as G3 ) ;
                                                                                                                                                                                        if ( entity == null )
                                                                                                                                                                                        {
                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                        }
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                                                                                          {
                                                                                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                            {
                                                                                                                                                                                              mapperEditedG3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                              {
                                                                                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                                                                                              }
                                                                                                                                                                                              else
                                                                                                                                                                                              {
                                                                                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                          else
                                                                                                                                                                                          {
                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                                                                                        {
                                                                                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "G3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                          {
                                                                                                                                                                                            var entity := ( loadEntity("G3", entities.getJSONObject(count).getString("id").parseUUID()) as G3 ) ;
                                                                                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                          }
                                                                                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                  }
                                                                                                                                                                                  else
                                                                                                                                                                                  {
                                                                                                                                                                                    if ( kind == "H3" )
                                                                                                                                                                                    {
                                                                                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                        {
                                                                                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                                                                                          var entity := ( loadEntity("H3", entities.getJSONObject(count).getString("id").parseUUID()) as H3 ) ;
                                                                                                                                                                                          if ( entity == null )
                                                                                                                                                                                          {
                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                          }
                                                                                                                                                                                          else
                                                                                                                                                                                          {
                                                                                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                                                                                            {
                                                                                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                              {
                                                                                                                                                                                                mapperEditedH3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                {
                                                                                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                                                                                }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                              else
                                                                                                                                                                                              {
                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                                                                                          {
                                                                                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "H3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                            {
                                                                                                                                                                                              var entity := ( loadEntity("H3", entities.getJSONObject(count).getString("id").parseUUID()) as H3 ) ;
                                                                                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                            }
                                                                                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                    }
                                                                                                                                                                                    else
                                                                                                                                                                                    {
                                                                                                                                                                                      if ( kind == "I3" )
                                                                                                                                                                                      {
                                                                                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                          {
                                                                                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                                                                                            var entity := ( loadEntity("I3", entities.getJSONObject(count).getString("id").parseUUID()) as I3 ) ;
                                                                                                                                                                                            if ( entity == null )
                                                                                                                                                                                            {
                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                            }
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                                                                                              {
                                                                                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                {
                                                                                                                                                                                                  mapperEditedI3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                                                                                  }
                                                                                                                                                                                                  else
                                                                                                                                                                                                  {
                                                                                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                              else
                                                                                                                                                                                              {
                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                                                                                            {
                                                                                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "I3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                              {
                                                                                                                                                                                                var entity := ( loadEntity("I3", entities.getJSONObject(count).getString("id").parseUUID()) as I3 ) ;
                                                                                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                              }
                                                                                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                      }
                                                                                                                                                                                      else
                                                                                                                                                                                      {
                                                                                                                                                                                        if ( kind == "J3" )
                                                                                                                                                                                        {
                                                                                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                            {
                                                                                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                                                                                              var entity := ( loadEntity("J3", entities.getJSONObject(count).getString("id").parseUUID()) as J3 ) ;
                                                                                                                                                                                              if ( entity == null )
                                                                                                                                                                                              {
                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                              }
                                                                                                                                                                                              else
                                                                                                                                                                                              {
                                                                                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                {
                                                                                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    mapperEditedJ3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                  else
                                                                                                                                                                                                  {
                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                                                                                              {
                                                                                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "J3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                {
                                                                                                                                                                                                  var entity := ( loadEntity("J3", entities.getJSONObject(count).getString("id").parseUUID()) as J3 ) ;
                                                                                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                }
                                                                                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                        }
                                                                                                                                                                                        else
                                                                                                                                                                                        {
                                                                                                                                                                                          if ( kind == "K3" )
                                                                                                                                                                                          {
                                                                                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                              {
                                                                                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                                                                                var entity := ( loadEntity("K3", entities.getJSONObject(count).getString("id").parseUUID()) as K3 ) ;
                                                                                                                                                                                                if ( entity == null )
                                                                                                                                                                                                {
                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      mapperEditedK3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                                                                                      }
                                                                                                                                                                                                      else
                                                                                                                                                                                                      {
                                                                                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                  else
                                                                                                                                                                                                  {
                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                                                                                {
                                                                                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "K3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    var entity := ( loadEntity("K3", entities.getJSONObject(count).getString("id").parseUUID()) as K3 ) ;
                                                                                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                  }
                                                                                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                          }
                                                                                                                                                                                          else
                                                                                                                                                                                          {
                                                                                                                                                                                            if ( kind == "L3" )
                                                                                                                                                                                            {
                                                                                                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                {
                                                                                                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                                                                                                  var entity := ( loadEntity("L3", entities.getJSONObject(count).getString("id").parseUUID()) as L3 ) ;
                                                                                                                                                                                                  if ( entity == null )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                  }
                                                                                                                                                                                                  else
                                                                                                                                                                                                  {
                                                                                                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        mapperEditedL3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                      else
                                                                                                                                                                                                      {
                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "L3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      var entity := ( loadEntity("L3", entities.getJSONObject(count).getString("id").parseUUID()) as L3 ) ;
                                                                                                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                    }
                                                                                                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                            }
                                                                                                                                                                                            else
                                                                                                                                                                                            {
                                                                                                                                                                                              if ( kind == "M3" )
                                                                                                                                                                                              {
                                                                                                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                                                                                                    var entity := ( loadEntity("M3", entities.getJSONObject(count).getString("id").parseUUID()) as M3 ) ;
                                                                                                                                                                                                    if ( entity == null )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          mapperEditedM3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                                                                                                          }
                                                                                                                                                                                                          else
                                                                                                                                                                                                          {
                                                                                                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                      else
                                                                                                                                                                                                      {
                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "M3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        var entity := ( loadEntity("M3", entities.getJSONObject(count).getString("id").parseUUID()) as M3 ) ;
                                                                                                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                      }
                                                                                                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                              }
                                                                                                                                                                                              else
                                                                                                                                                                                              {
                                                                                                                                                                                                if ( kind == "N3" )
                                                                                                                                                                                                {
                                                                                                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                                                                                                      var entity := ( loadEntity("N3", entities.getJSONObject(count).getString("id").parseUUID()) as N3 ) ;
                                                                                                                                                                                                      if ( entity == null )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                      }
                                                                                                                                                                                                      else
                                                                                                                                                                                                      {
                                                                                                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            mapperEditedN3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                          else
                                                                                                                                                                                                          {
                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "N3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          var entity := ( loadEntity("N3", entities.getJSONObject(count).getString("id").parseUUID()) as N3 ) ;
                                                                                                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                        }
                                                                                                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                }
                                                                                                                                                                                                else
                                                                                                                                                                                                {
                                                                                                                                                                                                  if ( kind == "O3" )
                                                                                                                                                                                                  {
                                                                                                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                                                                                                        var entity := ( loadEntity("O3", entities.getJSONObject(count).getString("id").parseUUID()) as O3 ) ;
                                                                                                                                                                                                        if ( entity == null )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              mapperEditedO3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                                                                                                              }
                                                                                                                                                                                                              else
                                                                                                                                                                                                              {
                                                                                                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                          else
                                                                                                                                                                                                          {
                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "O3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            var entity := ( loadEntity("O3", entities.getJSONObject(count).getString("id").parseUUID()) as O3 ) ;
                                                                                                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                          }
                                                                                                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                  }
                                                                                                                                                                                                  else
                                                                                                                                                                                                  {
                                                                                                                                                                                                    if ( kind == "P3" )
                                                                                                                                                                                                    {
                                                                                                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                                                                                                          var entity := ( loadEntity("P3", entities.getJSONObject(count).getString("id").parseUUID()) as P3 ) ;
                                                                                                                                                                                                          if ( entity == null )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                          }
                                                                                                                                                                                                          else
                                                                                                                                                                                                          {
                                                                                                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                mapperEditedP3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                              else
                                                                                                                                                                                                              {
                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "P3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              var entity := ( loadEntity("P3", entities.getJSONObject(count).getString("id").parseUUID()) as P3 ) ;
                                                                                                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                            }
                                                                                                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                    }
                                                                                                                                                                                                    else
                                                                                                                                                                                                    {
                                                                                                                                                                                                      if ( kind == "Q3" )
                                                                                                                                                                                                      {
                                                                                                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                                                                                                            var entity := ( loadEntity("Q3", entities.getJSONObject(count).getString("id").parseUUID()) as Q3 ) ;
                                                                                                                                                                                                            if ( entity == null )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  mapperEditedQ3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  else
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                              else
                                                                                                                                                                                                              {
                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Q3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                var entity := ( loadEntity("Q3", entities.getJSONObject(count).getString("id").parseUUID()) as Q3 ) ;
                                                                                                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                              }
                                                                                                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                      }
                                                                                                                                                                                                      else
                                                                                                                                                                                                      {
                                                                                                                                                                                                        if ( kind == "R3" )
                                                                                                                                                                                                        {
                                                                                                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                                                                                                              var entity := ( loadEntity("R3", entities.getJSONObject(count).getString("id").parseUUID()) as R3 ) ;
                                                                                                                                                                                                              if ( entity == null )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                              }
                                                                                                                                                                                                              else
                                                                                                                                                                                                              {
                                                                                                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    mapperEditedR3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  else
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "R3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  var entity := ( loadEntity("R3", entities.getJSONObject(count).getString("id").parseUUID()) as R3 ) ;
                                                                                                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                }
                                                                                                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                        }
                                                                                                                                                                                                        else
                                                                                                                                                                                                        {
                                                                                                                                                                                                          if ( kind == "S3" )
                                                                                                                                                                                                          {
                                                                                                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                                                                                                var entity := ( loadEntity("S3", entities.getJSONObject(count).getString("id").parseUUID()) as S3 ) ;
                                                                                                                                                                                                                if ( entity == null )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      mapperEditedS3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      else
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  else
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "S3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    var entity := ( loadEntity("S3", entities.getJSONObject(count).getString("id").parseUUID()) as S3 ) ;
                                                                                                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                          }
                                                                                                                                                                                                          else
                                                                                                                                                                                                          {
                                                                                                                                                                                                            if ( kind == "T3" )
                                                                                                                                                                                                            {
                                                                                                                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                                                                                                                  var entity := ( loadEntity("T3", entities.getJSONObject(count).getString("id").parseUUID()) as T3 ) ;
                                                                                                                                                                                                                  if ( entity == null )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  else
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        mapperEditedT3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      else
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "T3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      var entity := ( loadEntity("T3", entities.getJSONObject(count).getString("id").parseUUID()) as T3 ) ;
                                                                                                                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                            }
                                                                                                                                                                                                            else
                                                                                                                                                                                                            {
                                                                                                                                                                                                              if ( kind == "U3" )
                                                                                                                                                                                                              {
                                                                                                                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                                                                                                                    var entity := ( loadEntity("U3", entities.getJSONObject(count).getString("id").parseUUID()) as U3 ) ;
                                                                                                                                                                                                                    if ( entity == null )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          mapperEditedU3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          else
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      else
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "U3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        var entity := ( loadEntity("U3", entities.getJSONObject(count).getString("id").parseUUID()) as U3 ) ;
                                                                                                                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                              }
                                                                                                                                                                                                              else
                                                                                                                                                                                                              {
                                                                                                                                                                                                                if ( kind == "V3" )
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                                                                                                                      var entity := ( loadEntity("V3", entities.getJSONObject(count).getString("id").parseUUID()) as V3 ) ;
                                                                                                                                                                                                                      if ( entity == null )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      else
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            mapperEditedV3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          else
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "V3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          var entity := ( loadEntity("V3", entities.getJSONObject(count).getString("id").parseUUID()) as V3 ) ;
                                                                                                                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                }
                                                                                                                                                                                                                else
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  if ( kind == "W3" )
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                                                                                                                        var entity := ( loadEntity("W3", entities.getJSONObject(count).getString("id").parseUUID()) as W3 ) ;
                                                                                                                                                                                                                        if ( entity == null )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              mapperEditedW3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              else
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          else
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "W3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            var entity := ( loadEntity("W3", entities.getJSONObject(count).getString("id").parseUUID()) as W3 ) ;
                                                                                                                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  else
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    if ( kind == "X3" )
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                                                                                                                          var entity := ( loadEntity("X3", entities.getJSONObject(count).getString("id").parseUUID()) as X3 ) ;
                                                                                                                                                                                                                          if ( entity == null )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          else
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                mapperEditedX3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              else
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "X3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              var entity := ( loadEntity("X3", entities.getJSONObject(count).getString("id").parseUUID()) as X3 ) ;
                                                                                                                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    else
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      if ( kind == "Y3" )
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                                                                                                                            var entity := ( loadEntity("Y3", entities.getJSONObject(count).getString("id").parseUUID()) as Y3 ) ;
                                                                                                                                                                                                                            if ( entity == null )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  mapperEditedY3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              else
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Y3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                var entity := ( loadEntity("Y3", entities.getJSONObject(count).getString("id").parseUUID()) as Y3 ) ;
                                                                                                                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                      else
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        if ( kind == "Z3" )
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                                                                                                                              var entity := ( loadEntity("Z3", entities.getJSONObject(count).getString("id").parseUUID()) as Z3 ) ;
                                                                                                                                                                                                                              if ( entity == null )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              else
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    mapperEditedZ3(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Z3", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  var entity := ( loadEntity("Z3", entities.getJSONObject(count).getString("id").parseUUID()) as Z3 ) ;
                                                                                                                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        else
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          if ( kind == "A4" )
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                                                                                                                var entity := ( loadEntity("A4", entities.getJSONObject(count).getString("id").parseUUID()) as A4 ) ;
                                                                                                                                                                                                                                if ( entity == null )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      mapperEditedA4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "A4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    var entity := ( loadEntity("A4", entities.getJSONObject(count).getString("id").parseUUID()) as A4 ) ;
                                                                                                                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          else
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            if ( kind == "B4" )
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                                                                                                                                  var entity := ( loadEntity("B4", entities.getJSONObject(count).getString("id").parseUUID()) as B4 ) ;
                                                                                                                                                                                                                                  if ( entity == null )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        mapperEditedB4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "B4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      var entity := ( loadEntity("B4", entities.getJSONObject(count).getString("id").parseUUID()) as B4 ) ;
                                                                                                                                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            else
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              if ( kind == "C4" )
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                                                                                                                                    var entity := ( loadEntity("C4", entities.getJSONObject(count).getString("id").parseUUID()) as C4 ) ;
                                                                                                                                                                                                                                    if ( entity == null )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          mapperEditedC4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "C4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        var entity := ( loadEntity("C4", entities.getJSONObject(count).getString("id").parseUUID()) as C4 ) ;
                                                                                                                                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              else
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                if ( kind == "D4" )
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                                                                                                                                      var entity := ( loadEntity("D4", entities.getJSONObject(count).getString("id").parseUUID()) as D4 ) ;
                                                                                                                                                                                                                                      if ( entity == null )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            mapperEditedD4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "D4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          var entity := ( loadEntity("D4", entities.getJSONObject(count).getString("id").parseUUID()) as D4 ) ;
                                                                                                                                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  if ( kind == "E4" )
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                                                                                                                                        var entity := ( loadEntity("E4", entities.getJSONObject(count).getString("id").parseUUID()) as E4 ) ;
                                                                                                                                                                                                                                        if ( entity == null )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              mapperEditedE4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "E4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            var entity := ( loadEntity("E4", entities.getJSONObject(count).getString("id").parseUUID()) as E4 ) ;
                                                                                                                                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    if ( kind == "F4" )
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                                                                                                                                          var entity := ( loadEntity("F4", entities.getJSONObject(count).getString("id").parseUUID()) as F4 ) ;
                                                                                                                                                                                                                                          if ( entity == null )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                mapperEditedF4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "F4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              var entity := ( loadEntity("F4", entities.getJSONObject(count).getString("id").parseUUID()) as F4 ) ;
                                                                                                                                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                      if ( kind == "G4" )
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                                                                                                                                            var entity := ( loadEntity("G4", entities.getJSONObject(count).getString("id").parseUUID()) as G4 ) ;
                                                                                                                                                                                                                                            if ( entity == null )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  mapperEditedG4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "G4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                var entity := ( loadEntity("G4", entities.getJSONObject(count).getString("id").parseUUID()) as G4 ) ;
                                                                                                                                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                        if ( kind == "H4" )
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                                                                                                                                              var entity := ( loadEntity("H4", entities.getJSONObject(count).getString("id").parseUUID()) as H4 ) ;
                                                                                                                                                                                                                                              if ( entity == null )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    mapperEditedH4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "H4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  var entity := ( loadEntity("H4", entities.getJSONObject(count).getString("id").parseUUID()) as H4 ) ;
                                                                                                                                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                          if ( kind == "I4" )
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                var entity := ( loadEntity("I4", entities.getJSONObject(count).getString("id").parseUUID()) as I4 ) ;
                                                                                                                                                                                                                                                if ( entity == null )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      mapperEditedI4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "I4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    var entity := ( loadEntity("I4", entities.getJSONObject(count).getString("id").parseUUID()) as I4 ) ;
                                                                                                                                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                            if ( kind == "J4" )
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                  var entity := ( loadEntity("J4", entities.getJSONObject(count).getString("id").parseUUID()) as J4 ) ;
                                                                                                                                                                                                                                                  if ( entity == null )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        mapperEditedJ4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                        var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                        addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                          addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "J4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      var entity := ( loadEntity("J4", entities.getJSONObject(count).getString("id").parseUUID()) as J4 ) ;
                                                                                                                                                                                                                                                      jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                              if ( kind == "K4" )
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                    var entity := ( loadEntity("K4", entities.getJSONObject(count).getString("id").parseUUID()) as K4 ) ;
                                                                                                                                                                                                                                                    if ( entity == null )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          mapperEditedK4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                          var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                          addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                            addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "K4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        var entity := ( loadEntity("K4", entities.getJSONObject(count).getString("id").parseUUID()) as K4 ) ;
                                                                                                                                                                                                                                                        jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                if ( kind == "L4" )
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                      var entity := ( loadEntity("L4", entities.getJSONObject(count).getString("id").parseUUID()) as L4 ) ;
                                                                                                                                                                                                                                                      if ( entity == null )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            mapperEditedL4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                            var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                            addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                              addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "L4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                        if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          var entity := ( loadEntity("L4", entities.getJSONObject(count).getString("id").parseUUID()) as L4 ) ;
                                                                                                                                                                                                                                                          jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                  if ( kind == "M4" )
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                        var entity := ( loadEntity("M4", entities.getJSONObject(count).getString("id").parseUUID()) as M4 ) ;
                                                                                                                                                                                                                                                        if ( entity == null )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              mapperEditedM4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                              var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                              addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                                addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "M4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                          if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            var entity := ( loadEntity("M4", entities.getJSONObject(count).getString("id").parseUUID()) as M4 ) ;
                                                                                                                                                                                                                                                            jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                    if ( kind == "N4" )
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                          var entity := ( loadEntity("N4", entities.getJSONObject(count).getString("id").parseUUID()) as N4 ) ;
                                                                                                                                                                                                                                                          if ( entity == null )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                mapperEditedN4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                                var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                                addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                                  addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "N4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                            if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              var entity := ( loadEntity("N4", entities.getJSONObject(count).getString("id").parseUUID()) as N4 ) ;
                                                                                                                                                                                                                                                              jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                      if ( kind == "O4" )
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                            var entity := ( loadEntity("O4", entities.getJSONObject(count).getString("id").parseUUID()) as O4 ) ;
                                                                                                                                                                                                                                                            if ( entity == null )
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            else
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  mapperEditedO4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                                  var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                                  addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                                    addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "O4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                              if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                var entity := ( loadEntity("O4", entities.getJSONObject(count).getString("id").parseUUID()) as O4 ) ;
                                                                                                                                                                                                                                                                jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                        if ( kind == "P4" )
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                                            {
                                                                                                                                                                                                                                                              var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                              var entity := ( loadEntity("P4", entities.getJSONObject(count).getString("id").parseUUID()) as P4 ) ;
                                                                                                                                                                                                                                                              if ( entity == null )
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              else
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    mapperEditedP4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                                    var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                                    addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                                    if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                                      addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "P4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                                if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  var entity := ( loadEntity("P4", entities.getJSONObject(count).getString("id").parseUUID()) as P4 ) ;
                                                                                                                                                                                                                                                                  jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        else
                                                                                                                                                                                                                                                        {
                                                                                                                                                                                                                                                          if ( kind == "Q4" )
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            for ( count : Int from 0 to entities.length() )
                                                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                                                var localErrors := JSONArray() ;
                                                                                                                                                                                                                                                                var entity := ( loadEntity("Q4", entities.getJSONObject(count).getString("id").parseUUID()) as Q4 ) ;
                                                                                                                                                                                                                                                                if ( entity == null )
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  localErrors.put(makeJSONErrorObject("Object does not exist", "warning"));
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                else
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  if ( entity.mayModifySynchronize() )
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    if ( entity.version <= entities.getJSONObject(count).getInt("version") )
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      mapperEditedQ4(entity, entities.getJSONObject(count), localErrors);
                                                                                                                                                                                                                                                                      var exceptions := entity.validateSave() ;
                                                                                                                                                                                                                                                                      addValidateExceptionsToErrors(exceptions, localErrors);
                                                                                                                                                                                                                                                                      if ( containsErrorInJSONArray(localErrors) )
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        rollbackAndStartNewTransaction();
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      else
                                                                                                                                                                                                                                                                      {
                                                                                                                                                                                                                                                                        var uncheckedExceptions := commitAndStartNewTransaction() ;
                                                                                                                                                                                                                                                                        addValidationExceptionsToLocalErrors(uncheckedExceptions, localErrors);
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    else
                                                                                                                                                                                                                                                                    {
                                                                                                                                                                                                                                                                      localErrors.put(makeJSONErrorObject("Object already has newer version", "warning"));
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  else
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    localErrors.put(makeJSONErrorObject("No rights to modify this object", "warning"));
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                if ( localErrors.length() > 0 )
                                                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                                                  var jsonErrorObject := makeJSONEntityErrorObject(localErrors, "Q4", entities.getJSONObject(count).getString("id")) ;
                                                                                                                                                                                                                                                                  if ( containsErrorInJSONArray(localErrors) && entity != null )
                                                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                                                    var entity := ( loadEntity("Q4", entities.getJSONObject(count).getString("id").parseUUID()) as Q4 ) ;
                                                                                                                                                                                                                                                                    jsonErrorObject.put("restore", entity.toJSON());
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  errors.put(jsonErrorObject);
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          else
                                                                                                                                                                                                                                                          {
                                                                                                                                                                                                                                                            errors.put("type is undefined: " + kind);
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        else
        {
          errors.put("not valid parameter format missing/incorrect value/name/object");
        }
      }
  }
  else
  {
    errors.put("not valid parameter format");
  }
  json.put("errors", errors);
  json.put("result", result);
  return json;
}